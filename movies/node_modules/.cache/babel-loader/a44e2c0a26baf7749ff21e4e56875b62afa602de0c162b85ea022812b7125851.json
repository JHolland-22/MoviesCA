{"ast":null,"code":"var _jsxFileName = \"/Users/jorjaholland/Desktop/web app assignment /react-movie-labs/MoviesCA/MoviesCA-1/movies/src/contexts/actorContext.js\";\nimport React, { useState } from \"react\";\n\n// Create a context for storing favorite actors\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ActorsContext = /*#__PURE__*/React.createContext(null);\nconst ActorsContextProvider = props => {\n  // State to hold the list of favorite actors (storing only their IDs)\n  const [favoriteActors, setFavoriteActors] = useState([]);\n\n  // Function to add an actor to the favorite actors list\n  const addToFavorites = actor => {\n    // Only add the actor if they are not already in the favorite list\n    if (!favoriteActors.includes(actor.id)) {\n      setFavoriteActors([...favoriteActors, actor.id]);\n    }\n  };\n\n  // Function to remove an actor from the favorite actors list\n  const removeFromFavorites = actor => {\n    // Filter out the actor from the list by comparing actor IDs\n    setFavoriteActors(favoriteActors.filter(actorId => actorId !== actor.id));\n  };\n  return (\n    /*#__PURE__*/\n    // The provider makes the context and its functions available to all child components\n    _jsxDEV(ActorsContext.Provider, {\n      value: {\n        favoriteActors,\n        // List of favorite actors (actor IDs)\n        addToFavorites,\n        // Function to add an actor to favorites\n        removeFromFavorites // Function to remove an actor from favorites\n      },\n      children: [props.children, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }, this)\n  );\n};\nexport default ActorsContextProvider;","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ActorsContext","createContext","ActorsContextProvider","props","favoriteActors","setFavoriteActors","addToFavorites","actor","includes","id","removeFromFavorites","filter","actorId","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/jorjaholland/Desktop/web app assignment /react-movie-labs/MoviesCA/MoviesCA-1/movies/src/contexts/actorContext.js"],"sourcesContent":["import React, { useState } from \"react\";\n\n// Create a context for storing favorite actors\nexport const ActorsContext = React.createContext(null);\n\nconst ActorsContextProvider = (props) => {\n  // State to hold the list of favorite actors (storing only their IDs)\n  const [favoriteActors, setFavoriteActors] = useState([]);\n\n  // Function to add an actor to the favorite actors list\n  const addToFavorites = (actor) => {\n    // Only add the actor if they are not already in the favorite list\n    if (!favoriteActors.includes(actor.id)) {\n      setFavoriteActors([...favoriteActors, actor.id]);\n    }\n  };\n\n  // Function to remove an actor from the favorite actors list\n  const removeFromFavorites = (actor) => {\n    // Filter out the actor from the list by comparing actor IDs\n    setFavoriteActors(favoriteActors.filter((actorId) => actorId !== actor.id));\n  };\n\n  return (\n    // The provider makes the context and its functions available to all child components\n    <ActorsContext.Provider\n      value={{\n        favoriteActors,          // List of favorite actors (actor IDs)\n        addToFavorites,     // Function to add an actor to favorites\n        removeFromFavorites, // Function to remove an actor from favorites\n      }}\n    >\n      {props.children} {/* Children components will have access to the context */}\n    </ActorsContext.Provider>\n  );\n};\n\nexport default ActorsContextProvider;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;;AAEvC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,aAAa,gBAAGJ,KAAK,CAACK,aAAa,CAAC,IAAI,CAAC;AAEtD,MAAMC,qBAAqB,GAAIC,KAAK,IAAK;EACvC;EACA,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;;EAExD;EACA,MAAMS,cAAc,GAAIC,KAAK,IAAK;IAChC;IACA,IAAI,CAACH,cAAc,CAACI,QAAQ,CAACD,KAAK,CAACE,EAAE,CAAC,EAAE;MACtCJ,iBAAiB,CAAC,CAAC,GAAGD,cAAc,EAAEG,KAAK,CAACE,EAAE,CAAC,CAAC;IAClD;EACF,CAAC;;EAED;EACA,MAAMC,mBAAmB,GAAIH,KAAK,IAAK;IACrC;IACAF,iBAAiB,CAACD,cAAc,CAACO,MAAM,CAAEC,OAAO,IAAKA,OAAO,KAAKL,KAAK,CAACE,EAAE,CAAC,CAAC;EAC7E,CAAC;EAED;IAAA;IACE;IACAV,OAAA,CAACC,aAAa,CAACa,QAAQ;MACrBC,KAAK,EAAE;QACLV,cAAc;QAAW;QACzBE,cAAc;QAAM;QACpBI,mBAAmB,CAAE;MACvB,CAAE;MAAAK,QAAA,GAEDZ,KAAK,CAACY,QAAQ,EAAC,GAAC;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK;EAAC;AAE7B,CAAC;AAED,eAAejB,qBAAqB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}