{"ast":null,"code":"var _jsxFileName = \"/Users/jorjaholland/Desktop/web app assignment /react-movie-labs/MoviesCA/MoviesCA-5/movies/src/pages/favoriteActorPage.js\";\nimport React, { useContext } from \"react\";\nimport PageTemplate from \"../components/templateActorListPage\";\nimport { ActorsContext } from \"../contexts/actorContext\";\nimport { useQueries } from \"react-query\";\nimport { getActor } from \"../api/tmdb-api\";\nimport Spinner from '../components/spinner';\nimport RemoveFromFavorites from \"../components/cardIcons/removeFromFavorites\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FavoriteActorsPage = () => {\n  // Access the list of favorite actor IDs from the context\n  const {\n    favoriteActors: actorIds\n  } = useContext(ActorsContext);\n\n  // Fetch data for each favorite actor using useQueries\n  const favoriteActorQueries = useQueries(actorIds.map(actorId => ({\n    queryKey: [\"actor\", {\n      id: actorId\n    }],\n    // Unique query key for each actor\n    queryFn: getActor // Function to fetch actor data from the API\n  })));\n\n  // Check if any of the queries are still loading\n  const isLoading = favoriteActorQueries.find(m => m.isLoading === true);\n\n  // If any query is still loading, show the Spinner component\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Map over the query results and extract actor data\n  const actors = favoriteActorQueries.map(q => q.data);\n  return (\n    /*#__PURE__*/\n    // Pass the actors data and action for each actor to the PageTemplate component\n    _jsxDEV(PageTemplate, {\n      title: \"Favorite Actors\" // Title of the page\n      ,\n      actors: actors // The list of favorite actors\n      ,\n      action: actor => /*#__PURE__*/_jsxDEV(RemoveFromFavorites, {\n        actor: actor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 26\n      }, this) // Action to remove from favorites\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }, this)\n  );\n};\nexport default FavoriteActorsPage;\n// this page does not work properly sorry :\\","map":{"version":3,"names":["React","useContext","PageTemplate","ActorsContext","useQueries","getActor","Spinner","RemoveFromFavorites","jsxDEV","_jsxDEV","FavoriteActorsPage","favoriteActors","actorIds","favoriteActorQueries","map","actorId","queryKey","id","queryFn","isLoading","find","m","fileName","_jsxFileName","lineNumber","columnNumber","actors","q","data","title","action","actor"],"sources":["/Users/jorjaholland/Desktop/web app assignment /react-movie-labs/MoviesCA/MoviesCA-5/movies/src/pages/favoriteActorPage.js"],"sourcesContent":["import React, { useContext } from \"react\";\nimport PageTemplate from \"../components/templateActorListPage\";\nimport { ActorsContext } from \"../contexts/actorContext\";\nimport { useQueries } from \"react-query\";\nimport { getActor } from \"../api/tmdb-api\";\nimport Spinner from '../components/spinner';\nimport RemoveFromFavorites from \"../components/cardIcons/removeFromFavorites\";\n\nconst FavoriteActorsPage = () => {\n  // Access the list of favorite actor IDs from the context\n  const { favoriteActors: actorIds } = useContext(ActorsContext);\n\n  // Fetch data for each favorite actor using useQueries\n  const favoriteActorQueries = useQueries(\n    actorIds.map((actorId) => ({\n      queryKey: [\"actor\", { id: actorId }], // Unique query key for each actor\n      queryFn: getActor, // Function to fetch actor data from the API\n    }))\n  );\n\n  // Check if any of the queries are still loading\n  const isLoading = favoriteActorQueries.find((m) => m.isLoading === true);\n\n  // If any query is still loading, show the Spinner component\n  if (isLoading) {\n    return <Spinner />;\n  }\n\n  // Map over the query results and extract actor data\n  const actors = favoriteActorQueries.map((q) => q.data);\n\n  return (\n    // Pass the actors data and action for each actor to the PageTemplate component\n    <PageTemplate\n      title=\"Favorite Actors\" // Title of the page\n      actors={actors} // The list of favorite actors\n      action={(actor) => <RemoveFromFavorites actor={actor} />} // Action to remove from favorites\n    />\n  );\n};\n\nexport default FavoriteActorsPage;\n// this page does not work properly sorry :\\"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,OAAOC,YAAY,MAAM,qCAAqC;AAC9D,SAASC,aAAa,QAAQ,0BAA0B;AACxD,SAASC,UAAU,QAAQ,aAAa;AACxC,SAASC,QAAQ,QAAQ,iBAAiB;AAC1C,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,mBAAmB,MAAM,6CAA6C;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAC/B;EACA,MAAM;IAAEC,cAAc,EAAEC;EAAS,CAAC,GAAGX,UAAU,CAACE,aAAa,CAAC;;EAE9D;EACA,MAAMU,oBAAoB,GAAGT,UAAU,CACrCQ,QAAQ,CAACE,GAAG,CAAEC,OAAO,KAAM;IACzBC,QAAQ,EAAE,CAAC,OAAO,EAAE;MAAEC,EAAE,EAAEF;IAAQ,CAAC,CAAC;IAAE;IACtCG,OAAO,EAAEb,QAAQ,CAAE;EACrB,CAAC,CAAC,CACJ,CAAC;;EAED;EACA,MAAMc,SAAS,GAAGN,oBAAoB,CAACO,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACF,SAAS,KAAK,IAAI,CAAC;;EAExE;EACA,IAAIA,SAAS,EAAE;IACb,oBAAOV,OAAA,CAACH,OAAO;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACpB;;EAEA;EACA,MAAMC,MAAM,GAAGb,oBAAoB,CAACC,GAAG,CAAEa,CAAC,IAAKA,CAAC,CAACC,IAAI,CAAC;EAEtD;IAAA;IACE;IACAnB,OAAA,CAACP,YAAY;MACX2B,KAAK,EAAC,iBAAiB,CAAC;MAAA;MACxBH,MAAM,EAAEA,MAAO,CAAC;MAAA;MAChBI,MAAM,EAAGC,KAAK,iBAAKtB,OAAA,CAACF,mBAAmB;QAACwB,KAAK,EAAEA;MAAM;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3D;EAAC;AAEN,CAAC;AAED,eAAef,kBAAkB;AACjC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}