{"ast":null,"code":"var _jsxFileName = \"/Users/jorjaholland/Desktop/web app assignment /react-movie-labs/MoviesCA/movies/src/pages/favoriteMoviesPage.js\";\nimport React, { useContext } from \"react\";\nimport PageTemplate from \"../components/templateMovieListPage\";\nimport { MovieContext } from \"../contexts/movieContext\";\nimport { useQueries } from \"react-query\";\nimport { getMovie } from \"../api/tmdb-api\";\nimport Spinner from \"../components/spinner\";\nimport RemoveFromFavorites from \"../components/cardIcons/removeFromFavorites\";\nimport WriteReview from \"../components/cardIcons/writeReview\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FavoriteMoviesPage = () => {\n  const {\n    favorites: movieIds\n  } = useContext(MovieContext);\n  const favoriteMovieQueries = useQueries(movieIds.map(movieId => {\n    return {\n      queryKey: [\"movie\", {\n        id: movieId\n      }],\n      queryFn: getMovie\n    };\n  }));\n  const isLoading = favoriteMovieQueries.find(m => m.isLoading === true);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 12\n    }, this);\n  }\n  const movies = favoriteMovieQueries.map(q => {\n    const movieData = q.data;\n    if (movieData && movieData.genres) {\n      movieData.genre_ids = movieData.genres.map(g => g.id);\n    }\n    return movieData;\n  });\n  const toDo = () => true;\n  return /*#__PURE__*/_jsxDEV(PageTemplate, {\n    title: \"Favorite Movies\",\n    movies: movies,\n    action: movie => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(RemoveFromFavorites, {\n          movie: movie\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(WriteReview, {\n          movie: movie\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\nexport default FavoriteMoviesPage;","map":{"version":3,"names":["React","useContext","PageTemplate","MovieContext","useQueries","getMovie","Spinner","RemoveFromFavorites","WriteReview","jsxDEV","_jsxDEV","Fragment","_Fragment","FavoriteMoviesPage","favorites","movieIds","favoriteMovieQueries","map","movieId","queryKey","id","queryFn","isLoading","find","m","fileName","_jsxFileName","lineNumber","columnNumber","movies","q","movieData","data","genres","genre_ids","g","toDo","title","action","movie","children"],"sources":["/Users/jorjaholland/Desktop/web app assignment /react-movie-labs/MoviesCA/movies/src/pages/favoriteMoviesPage.js"],"sourcesContent":["import React, { useContext } from \"react\";\nimport PageTemplate from \"../components/templateMovieListPage\";\nimport { MovieContext } from \"../contexts/movieContext\";\nimport { useQueries } from \"react-query\";\nimport { getMovie } from \"../api/tmdb-api\";\nimport Spinner from \"../components/spinner\";\nimport RemoveFromFavorites from \"../components/cardIcons/removeFromFavorites\";\nimport WriteReview from \"../components/cardIcons/writeReview\";\n\nconst FavoriteMoviesPage = () => {\n  const { favorites: movieIds } = useContext(MovieContext);\n\n  const favoriteMovieQueries = useQueries(\n    movieIds.map((movieId) => {\n      return {\n        queryKey: [\"movie\", { id: movieId }],\n        queryFn: getMovie,\n      };\n    })\n  );\n\n  const isLoading = favoriteMovieQueries.find((m) => m.isLoading === true);\n\n  if (isLoading) {\n    return <Spinner />;\n  }\n\n  const movies = favoriteMovieQueries.map((q) => {\n    const movieData = q.data;\n    if (movieData && movieData.genres) {\n      movieData.genre_ids = movieData.genres.map((g) => g.id);\n    }\n    return movieData;\n  });\n\n  const toDo = () => true;\n\n  return (\n    <PageTemplate\n      title=\"Favorite Movies\"\n      movies={movies}\n      action={(movie) => {\n        return (\n          <>\n            <RemoveFromFavorites movie={movie} />\n            <WriteReview movie={movie} />\n          </>\n        );\n      }}\n    />\n  );\n};\n\nexport default FavoriteMoviesPage;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,OAAOC,YAAY,MAAM,qCAAqC;AAC9D,SAASC,YAAY,QAAQ,0BAA0B;AACvD,SAASC,UAAU,QAAQ,aAAa;AACxC,SAASC,QAAQ,QAAQ,iBAAiB;AAC1C,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,mBAAmB,MAAM,6CAA6C;AAC7E,OAAOC,WAAW,MAAM,qCAAqC;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE9D,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAC/B,MAAM;IAAEC,SAAS,EAAEC;EAAS,CAAC,GAAGd,UAAU,CAACE,YAAY,CAAC;EAExD,MAAMa,oBAAoB,GAAGZ,UAAU,CACrCW,QAAQ,CAACE,GAAG,CAAEC,OAAO,IAAK;IACxB,OAAO;MACLC,QAAQ,EAAE,CAAC,OAAO,EAAE;QAAEC,EAAE,EAAEF;MAAQ,CAAC,CAAC;MACpCG,OAAO,EAAEhB;IACX,CAAC;EACH,CAAC,CACH,CAAC;EAED,MAAMiB,SAAS,GAAGN,oBAAoB,CAACO,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACF,SAAS,KAAK,IAAI,CAAC;EAExE,IAAIA,SAAS,EAAE;IACb,oBAAOZ,OAAA,CAACJ,OAAO;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACpB;EAEA,MAAMC,MAAM,GAAGb,oBAAoB,CAACC,GAAG,CAAEa,CAAC,IAAK;IAC7C,MAAMC,SAAS,GAAGD,CAAC,CAACE,IAAI;IACxB,IAAID,SAAS,IAAIA,SAAS,CAACE,MAAM,EAAE;MACjCF,SAAS,CAACG,SAAS,GAAGH,SAAS,CAACE,MAAM,CAAChB,GAAG,CAAEkB,CAAC,IAAKA,CAAC,CAACf,EAAE,CAAC;IACzD;IACA,OAAOW,SAAS;EAClB,CAAC,CAAC;EAEF,MAAMK,IAAI,GAAGA,CAAA,KAAM,IAAI;EAEvB,oBACE1B,OAAA,CAACR,YAAY;IACXmC,KAAK,EAAC,iBAAiB;IACvBR,MAAM,EAAEA,MAAO;IACfS,MAAM,EAAGC,KAAK,IAAK;MACjB,oBACE7B,OAAA,CAAAE,SAAA;QAAA4B,QAAA,gBACE9B,OAAA,CAACH,mBAAmB;UAACgC,KAAK,EAAEA;QAAM;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACrClB,OAAA,CAACF,WAAW;UAAC+B,KAAK,EAAEA;QAAM;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA,eAC7B,CAAC;IAEP;EAAE;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEN,CAAC;AAED,eAAef,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}