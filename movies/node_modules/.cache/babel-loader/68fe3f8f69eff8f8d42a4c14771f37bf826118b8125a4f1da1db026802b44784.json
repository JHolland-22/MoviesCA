{"ast":null,"code":"var _jsxFileName = \"/Users/jorjaholland/Desktop/web app assignment /react-movie-labs/MoviesCA/MoviesCA/movies/src/pages/homePage.js\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { getUpcomingMovies, getGenres } from \"../api/tmdb-api\";\nimport PageTemplate from \"../components/templateMovieListPage\";\nimport Spinner from \"../components/spinner\";\nimport PlaylistAddIcon from \"@mui/icons-material/PlaylistAdd\";\nimport IconButton from \"@mui/material/IconButton\";\nimport { MoviesContext } from \"../contexts/movieContext\";\nimport Pagination from \"@mui/material/Pagination\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst UpcomingMoviesPage = () => {\n  const [genres, setGenres] = useState([]);\n  const [page, setPage] = useState(1);\n  const {\n    addToMustWatch\n  } = useContext(MoviesContext);\n  const {\n    data,\n    error,\n    isLoading,\n    isError\n  } = useQuery([\"upcoming\", page], () => getUpcomingMovies(page), {\n    keepPreviousData: true\n  });\n  useEffect(() => {\n    getGenres().then(response => {\n      if (Array.isArray(response)) {\n        setGenres(response);\n      }\n    });\n  }, []);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 12\n    }, this);\n  }\n  if (isError) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 12\n    }, this);\n  }\n  const movies = (data === null || data === void 0 ? void 0 : data.results) || [];\n  const totalPages = (data === null || data === void 0 ? void 0 : data.total_pages) || 1;\n  const getMovieGenres = movie => {\n    if (!genres || genres.length === 0 || !movie.genre_ids) {\n      return [];\n    }\n    return movie.genre_ids.map(genreId => genres.find(genre => genre.id === genreId)).filter(genre => genre);\n  };\n  const handlePageChange = (event, value) => {\n    setPage(value);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(PageTemplate, {\n      title: \"Upcoming Movies\",\n      movies: movies,\n      action: movie => /*#__PURE__*/_jsxDEV(IconButton, {\n        \"aria-label\": \"add to must watch\",\n        onClick: () => {\n          addToMustWatch(movie);\n          console.log(\"Must Watch Movies:\", movie.id);\n        },\n        children: /*#__PURE__*/_jsxDEV(PlaylistAddIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this),\n      getGenresForMovie: getMovieGenres\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      count: totalPages,\n      page: page,\n      onChange: handlePageChange,\n      color: \"primary\",\n      shape: \"rounded\",\n      sx: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        margin: \"20px 0\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\nexport default UpcomingMoviesPage;","map":{"version":3,"names":["React","useState","useEffect","useContext","useQuery","getUpcomingMovies","getGenres","PageTemplate","Spinner","PlaylistAddIcon","IconButton","MoviesContext","Pagination","jsxDEV","_jsxDEV","Fragment","_Fragment","UpcomingMoviesPage","genres","setGenres","page","setPage","addToMustWatch","data","error","isLoading","isError","keepPreviousData","then","response","Array","isArray","fileName","_jsxFileName","lineNumber","columnNumber","children","message","movies","results","totalPages","total_pages","getMovieGenres","movie","length","genre_ids","map","genreId","find","genre","id","filter","handlePageChange","event","value","title","action","onClick","console","log","getGenresForMovie","count","onChange","color","shape","sx","display","justifyContent","margin"],"sources":["/Users/jorjaholland/Desktop/web app assignment /react-movie-labs/MoviesCA/MoviesCA/movies/src/pages/homePage.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { getUpcomingMovies, getGenres } from \"../api/tmdb-api\";\nimport PageTemplate from \"../components/templateMovieListPage\";\nimport Spinner from \"../components/spinner\";\nimport PlaylistAddIcon from \"@mui/icons-material/PlaylistAdd\";\nimport IconButton from \"@mui/material/IconButton\";\nimport { MoviesContext } from \"../contexts/movieContext\";\nimport Pagination from \"@mui/material/Pagination\";\n\nconst UpcomingMoviesPage = () => {\n  const [genres, setGenres] = useState([]);\n  const [page, setPage] = useState(1);\n  const { addToMustWatch } = useContext(MoviesContext);\n\n  const { data, error, isLoading, isError } = useQuery(\n    [\"upcoming\", page],\n    () => getUpcomingMovies(page),\n    {\n      keepPreviousData: true,\n    }\n  );\n\n  useEffect(() => {\n    getGenres().then((response) => {\n      if (Array.isArray(response)) {\n        setGenres(response);\n      }\n    });\n  }, []);\n\n  if (isLoading) {\n    return <Spinner />;\n  }\n\n  if (isError) {\n    return <h1>{error.message}</h1>;\n  }\n\n  const movies = data?.results || [];\n  const totalPages = data?.total_pages || 1;\n\n  const getMovieGenres = (movie) => {\n    if (!genres || genres.length === 0 || !movie.genre_ids) {\n      return [];\n    }\n    return movie.genre_ids\n      .map((genreId) => genres.find((genre) => genre.id === genreId))\n      .filter((genre) => genre);\n  };\n\n  const handlePageChange = (event, value) => {\n    setPage(value);\n  };\n\n  return (\n    <>\n      <PageTemplate\n        title=\"Upcoming Movies\"\n        movies={movies}\n        action={(movie) => (\n          <IconButton\n            aria-label=\"add to must watch\"\n            onClick={() => {\n              addToMustWatch(movie);\n              console.log(\"Must Watch Movies:\", movie.id);\n            }}\n          >\n            <PlaylistAddIcon />\n          </IconButton>\n        )}\n        getGenresForMovie={getMovieGenres}\n      />\n      <Pagination\n        count={totalPages}\n        page={page}\n        onChange={handlePageChange}\n        color=\"primary\"\n        shape=\"rounded\"\n        sx={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          margin: \"20px 0\",\n        }}\n      />\n    </>\n  );\n};\n\nexport default UpcomingMoviesPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}