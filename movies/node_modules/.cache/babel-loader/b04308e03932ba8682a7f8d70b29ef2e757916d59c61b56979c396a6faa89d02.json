{"ast":null,"code":"export const getMovies = id => {\n  return fetch(`https://api.themoviedb.org/3/discover/movie?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US&include_adult=false&include_video=true&page=${id}`).then(response => {\n    if (!response.ok) {\n      return response.json().then(error => {\n        throw new Error(error.status_message || \"Something went wrong\");\n      });\n    }\n    return response.json();\n  }).catch(error => {\n    throw error;\n  });\n};\nexport const getUpcomingMovies = id => {\n  const date = new Date().toISOString().split('T')[0];\n  return fetch(`https://api.themoviedb.org/3/discover/movie?api_key=${process.env.REACT_APP_TMDB_KEY}&include_adult=false&include_video=true&language=en-US&page=${id}&primary_release_date.gte=${date}&sort_by=popularity.desc`).then(response => {\n    if (!response.ok) {\n      return response.json().then(error => {\n        throw new Error(error.status_message || \"Something went wrong\");\n      });\n    }\n    return response.json();\n  }).catch(error => {\n    throw error;\n  });\n};\nexport const getMovie = ({\n  queryKey\n}) => {\n  const [, idPart] = queryKey;\n  const {\n    id\n  } = idPart;\n  return fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=${process.env.REACT_APP_TMDB_KEY}`).then(response => {\n    if (!response.ok) {\n      return response.json().then(error => {\n        throw new Error(error.status_message || \"Something went wrong\");\n      });\n    }\n    return response.json();\n  }).catch(error => {\n    throw error;\n  });\n};\nexport const getGenres = () => {\n  return fetch(\"https://api.themoviedb.org/3/genre/movie/list?api_key=\" + process.env.REACT_APP_TMDB_KEY + \"&language=en-US\").then(response => {\n    if (!response.ok) {\n      return response.json().then(error => {\n        throw new Error(error.status_message || \"Something went wrong\");\n      });\n    }\n    return response.json();\n  }).catch(error => {\n    throw error;\n  });\n};\nexport const getMovieImages = ({\n  queryKey\n}) => {\n  const [, idPart] = queryKey;\n  const {\n    id\n  } = idPart;\n  return fetch(`https://api.themoviedb.org/3/movie/${id}/images?api_key=${process.env.REACT_APP_TMDB_KEY}`).then(response => {\n    if (!response.ok) {\n      return response.json().then(error => {\n        throw new Error(error.status_message || \"Something went wrong\");\n      });\n    }\n    return response.json();\n  }).catch(error => {\n    throw error;\n  });\n};\nexport const getMovieReviews = ({\n  queryKey\n}) => {\n  const [, idPart] = queryKey;\n  const {\n    id\n  } = idPart;\n  return fetch(`https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${process.env.REACT_APP_TMDB_KEY}`).then(response => {\n    if (!response.ok) {\n      return response.json().then(error => {\n        throw new Error(error.status_message || \"Something went wrong\");\n      });\n    }\n    return response.json();\n  }).catch(error => {\n    throw error;\n  });\n};\nexport const getActorDetails = ({\n  queryKey\n}) => {\n  const [, idPart] = queryKey;\n  const {\n    id\n  } = idPart;\n  return fetch(`https://api.themoviedb.org/3/person/${id}?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US`).then(response => {\n    if (!response.ok) {\n      return response.json().then(error => {\n        throw new Error(error.status_message || \"Something went wrong\");\n      });\n    }\n    return response.json();\n  }).catch(error => {\n    throw error;\n  });\n};\nexport const getActorImages = ({\n  queryKey\n}) => {\n  const [, idPart] = queryKey;\n  const {\n    id\n  } = idPart;\n  return fetch(`https://api.themoviedb.org/3/person/${id}/images?api_key=${process.env.REACT_APP_TMDB_KEY}`).then(response => {\n    if (!response.ok) {\n      return response.json().then(error => {\n        throw new Error(error.status_message || \"Something went wrong\");\n      });\n    }\n    return response.json();\n  }).catch(error => {\n    throw error;\n  });\n};\nexport const getLatestMovie = () => {\n  return fetch(`https://api.themoviedb.org/3/movie/latest?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US`).then(response => {\n    if (!response.ok) {\n      return response.json().then(error => {\n        throw new Error(error.status_message || \"Something went wrong\");\n      });\n    }\n    return response.json();\n  }).catch(error => {\n    throw error;\n  });\n};","map":{"version":3,"names":["getMovies","id","fetch","process","env","REACT_APP_TMDB_KEY","then","response","ok","json","error","Error","status_message","catch","getUpcomingMovies","date","Date","toISOString","split","getMovie","queryKey","idPart","getGenres","getMovieImages","getMovieReviews","getActorDetails","getActorImages","getLatestMovie"],"sources":["/Users/jorjaholland/Desktop/web app assignment /react-movie-labs/MoviesCA/movies/src/api/tmdb-api.js"],"sourcesContent":["export const getMovies = (id) => {\n  return fetch(\n    `https://api.themoviedb.org/3/discover/movie?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US&include_adult=false&include_video=true&page=${id}`\n  ).then((response) => {\n    if (!response.ok) {\n      return response.json().then((error) => {\n        throw new Error(error.status_message || \"Something went wrong\");\n      });\n    }\n    return response.json();\n  })\n    .catch((error) => {\n      throw error;\n    });\n};\n\nexport const getUpcomingMovies = (id) => {\n  const date = new Date().toISOString().split('T')[0];\n  return fetch(\n    `https://api.themoviedb.org/3/discover/movie?api_key=${process.env.REACT_APP_TMDB_KEY}&include_adult=false&include_video=true&language=en-US&page=${id}&primary_release_date.gte=${date}&sort_by=popularity.desc`\n  ).then((response) => {\n    if (!response.ok) {\n      return response.json().then((error) => {\n        throw new Error(error.status_message || \"Something went wrong\");\n      });\n    }\n    return response.json();\n  })\n    .catch((error) => {\n      throw error;\n    });\n};\n\nexport const getMovie = ({ queryKey }) => {\n  const [, idPart] = queryKey;\n  const { id } = idPart;\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${process.env.REACT_APP_TMDB_KEY}`\n  ).then((response) => {\n    if (!response.ok) {\n      return response.json().then((error) => {\n        throw new Error(error.status_message || \"Something went wrong\");\n      });\n    }\n    return response.json();\n  })\n    .catch((error) => {\n      throw error;\n    });\n};\n\nexport const getGenres = () => {\n  return fetch(\n    \"https://api.themoviedb.org/3/genre/movie/list?api_key=\" +\n    process.env.REACT_APP_TMDB_KEY +\n    \"&language=en-US\"\n  ).then((response) => {\n    if (!response.ok) {\n      return response.json().then((error) => {\n        throw new Error(error.status_message || \"Something went wrong\");\n      });\n    }\n    return response.json();\n  })\n    .catch((error) => {\n      throw error;\n    });\n};\n\nexport const getMovieImages = ({ queryKey }) => {\n  const [, idPart] = queryKey;\n  const { id } = idPart;\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}/images?api_key=${process.env.REACT_APP_TMDB_KEY}`\n  ).then((response) => {\n    if (!response.ok) {\n      return response.json().then((error) => {\n        throw new Error(error.status_message || \"Something went wrong\");\n      });\n    }\n    return response.json();\n  })\n    .catch((error) => {\n      throw error;\n    });\n};\n\nexport const getMovieReviews = ({ queryKey }) => {\n  const [, idPart] = queryKey;\n  const { id } = idPart;\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${process.env.REACT_APP_TMDB_KEY}`\n  ).then((response) => {\n    if (!response.ok) {\n      return response.json().then((error) => {\n        throw new Error(error.status_message || \"Something went wrong\");\n      });\n    }\n    return response.json();\n  })\n    .catch((error) => {\n      throw error;\n    });\n};\n\nexport const getActorDetails = ({ queryKey }) => {\n  const [, idPart] = queryKey;\n  const { id } = idPart;\n  return fetch(\n    `https://api.themoviedb.org/3/person/${id}?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US`\n  )\n    .then((response) => {\n      if (!response.ok) {\n        return response.json().then((error) => {\n          throw new Error(error.status_message || \"Something went wrong\");\n        });\n      }\n      return response.json();\n    })\n    .catch((error) => {\n      throw error;\n    });\n};\n\nexport const getActorImages = ({ queryKey }) => {\n  const [, idPart] = queryKey;\n  const { id } = idPart;\n  return fetch(\n    `https://api.themoviedb.org/3/person/${id}/images?api_key=${process.env.REACT_APP_TMDB_KEY}`\n  )\n    .then((response) => {\n      if (!response.ok) {\n        return response.json().then((error) => {\n          throw new Error(error.status_message || \"Something went wrong\");\n        });\n      }\n      return response.json();\n    })\n    .catch((error) => {\n      throw error;\n    });\n};\n\nexport const getLatestMovie = () => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/latest?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US`\n  )\n    .then((response) => {\n      if (!response.ok) {\n        return response.json().then((error) => {\n          throw new Error(error.status_message || \"Something went wrong\");\n        });\n      }\n      return response.json();\n    })\n    .catch((error) => {\n      throw error;\n    });\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}