{"ast":null,"code":"var _jsxFileName = \"/Users/jorjaholland/Desktop/web app assignment /react-movie-labs/MoviesCA-1/movies/src/components/templateActorPage/index.js\";\nimport React from \"react\";\nimport ActorHeader from \"../actorHeader\";\nimport Grid from \"@mui/material/Grid2\";\nimport ImageList from \"@mui/material/ImageList\";\nimport ImageListItem from \"@mui/material/ImageListItem\";\nimport { getActorImages } from \"../../api/tmdb-api\";\nimport { useQuery } from \"react-query\";\nimport Spinner from '../spinner';\nimport Typography from \"@mui/material/Typography\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TemplateActorPage = ({\n  actor,\n  children\n}) => {\n  const {\n    id,\n    name\n  } = actor;\n  const {\n    data,\n    error,\n    isLoading,\n    isError\n  } = useQuery(['images', id], () => getActorImages(id), {\n    enabled: !!id\n  });\n  const images = (data === null || data === void 0 ? void 0 : data.profiles) || [];\n  if (!actor || !id) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Actor details not available. Please try again later.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 12\n    }, this);\n  }\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 12\n    }, this);\n  }\n  if (isError) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: (error === null || error === void 0 ? void 0 : error.message) || 'Failed to load images.'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      component: \"h1\",\n      gutterBottom: true,\n      children: name || \"Actor Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ActorHeader, {\n      actor: actor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 5,\n      style: {\n        padding: \"15px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 3,\n        children: /*#__PURE__*/_jsxDEV(ImageList, {\n          sx: {\n            height: \"100vh\"\n          },\n          cols: 1,\n          children: images.length > 0 ? images.map(image => /*#__PURE__*/_jsxDEV(ImageListItem, {\n            cols: 1,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `https://image.tmdb.org/t/p/w500/${image.file_path}`,\n              alt: image.file_path\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 19\n            }, this)\n          }, image.file_path, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 17\n          }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No images available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 9,\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\nexport default TemplateActorPage;","map":{"version":3,"names":["React","ActorHeader","Grid","ImageList","ImageListItem","getActorImages","useQuery","Spinner","Typography","jsxDEV","_jsxDEV","Fragment","_Fragment","TemplateActorPage","actor","children","id","name","data","error","isLoading","isError","enabled","images","profiles","fileName","_jsxFileName","lineNumber","columnNumber","message","variant","component","gutterBottom","container","spacing","style","padding","item","xs","sx","height","cols","length","map","image","src","file_path","alt"],"sources":["/Users/jorjaholland/Desktop/web app assignment /react-movie-labs/MoviesCA-1/movies/src/components/templateActorPage/index.js"],"sourcesContent":["import React from \"react\";\nimport ActorHeader from \"../actorHeader\";\nimport Grid from \"@mui/material/Grid2\";\nimport ImageList from \"@mui/material/ImageList\";\nimport ImageListItem from \"@mui/material/ImageListItem\";\nimport { getActorImages } from \"../../api/tmdb-api\";\nimport { useQuery } from \"react-query\";\nimport Spinner from '../spinner';\nimport Typography from \"@mui/material/Typography\";\n\n\nconst TemplateActorPage = ({ actor, children }) => {\n  const { id, name } = actor;\n\n  const { data, error, isLoading, isError } = useQuery(\n    ['images', id],\n    () => getActorImages(id),\n    {\n      enabled: !!id,\n    }\n  );\n\n  const images = data?.profiles || [];\n\n  if (!actor || !id) {\n    return <h1>Actor details not available. Please try again later.</h1>;\n  }\n\n  if (isLoading) {\n    return <Spinner />;\n  }\n\n  if (isError) {\n    return <h1>{error?.message || 'Failed to load images.'}</h1>;\n  }\n\n  return (\n    <>\n      <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n        {name || \"Actor Details\"}\n      </Typography>\n\n      <ActorHeader actor={actor} />\n\n      <Grid container spacing={5} style={{ padding: \"15px\" }}>\n        <Grid item xs={3}>\n          <ImageList sx={{ height: \"100vh\" }} cols={1}>\n            {images.length > 0 ? (\n              images.map((image) => (\n                <ImageListItem key={image.file_path} cols={1}>\n                  <img\n                    src={`https://image.tmdb.org/t/p/w500/${image.file_path}`}\n                    alt={image.file_path}\n                  />\n                </ImageListItem>\n              ))\n            ) : (\n              <p>No images available</p>\n            )}\n          </ImageList>\n        </Grid>\n\n        <Grid item xs={9}>\n          {children}\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default TemplateActorPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}