{"ast":null,"code":"var _jsxFileName = \"/Users/jorjaholland/Desktop/web app assignment /react-movie-labs/MoviesCA/movies/src/components/templateMoviePage/index.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Header from \"../headerMovieList\";\nimport FilterCard from \"../filterMoviesCard\";\nimport MovieList from \"../movieList\";\nimport Grid from \"@mui/material/Grid2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MovieListPageTemplate({\n  movies,\n  title,\n  selectFavorite\n}) {\n  _s();\n  const [nameFilter, setNameFilter] = useState(\"\");\n  const [genreFilter, setGenreFilter] = useState(\"0\");\n  const [allGenres, setAllGenres] = useState([]);\n  const genreId = Number(genreFilter);\n  useEffect(() => {\n    async function fetchGenres() {\n      try {\n        const response = await fetch(\"/api/genres\");\n        const data = await response.json();\n        if (Array.isArray(data.genres)) {\n          setAllGenres(data.genres);\n        }\n      } catch (error) {\n        console.error(\"Error fetching genres:\", error);\n      }\n    }\n    fetchGenres();\n  }, []);\n  let displayedMovies = movies.filter(m => {\n    return m.title.toLowerCase().search(nameFilter.toLowerCase()) !== -1;\n  }).filter(m => {\n    return genreId > 0 ? m.genre_ids.includes(genreId) : true;\n  });\n  const handleChange = (type, value) => {\n    if (type === \"name\") setNameFilter(value);else setGenreFilter(value);\n  };\n  const genres = Array.isArray(allGenres) ? allGenres : [];\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      size: 12,\n      children: /*#__PURE__*/_jsxDEV(Header, {\n        title: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      sx: {\n        flex: \"1 1 500px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        size: {\n          xs: 12,\n          sm: 6,\n          md: 4,\n          lg: 3,\n          xl: 2\n        },\n        sx: {\n          padding: \"20px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(FilterCard, {\n          onUserInput: handleChange,\n          titleFilter: nameFilter,\n          genreFilter: genreFilter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, \"find\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MovieList, {\n        selectFavorite: selectFavorite,\n        movies: displayedMovies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(MovieListPageTemplate, \"6aqR7PanNWRNdWZvfSi1xq1nSEs=\");\n_c = MovieListPageTemplate;\nexport default MovieListPageTemplate;\nvar _c;\n$RefreshReg$(_c, \"MovieListPageTemplate\");","map":{"version":3,"names":["React","useState","useEffect","Header","FilterCard","MovieList","Grid","jsxDEV","_jsxDEV","MovieListPageTemplate","movies","title","selectFavorite","_s","nameFilter","setNameFilter","genreFilter","setGenreFilter","allGenres","setAllGenres","genreId","Number","fetchGenres","response","fetch","data","json","Array","isArray","genres","error","console","displayedMovies","filter","m","toLowerCase","search","genre_ids","includes","handleChange","type","value","container","children","size","fileName","_jsxFileName","lineNumber","columnNumber","sx","flex","xs","sm","md","lg","xl","padding","onUserInput","titleFilter","_c","$RefreshReg$"],"sources":["/Users/jorjaholland/Desktop/web app assignment /react-movie-labs/MoviesCA/movies/src/components/templateMoviePage/index.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Header from \"../headerMovieList\";\nimport FilterCard from \"../filterMoviesCard\";\nimport MovieList from \"../movieList\";\nimport Grid from \"@mui/material/Grid2\";\n\nfunction MovieListPageTemplate({ movies, title, selectFavorite }) {\n  const [nameFilter, setNameFilter] = useState(\"\");\n  const [genreFilter, setGenreFilter] = useState(\"0\");\n  const [allGenres, setAllGenres] = useState([]);\n  const genreId = Number(genreFilter);\n\n  useEffect(() => {\n    async function fetchGenres() {\n      try {\n        const response = await fetch(\"/api/genres\");\n        const data = await response.json();\n        if (Array.isArray(data.genres)) {\n          setAllGenres(data.genres);\n        }\n      } catch (error) {\n        console.error(\"Error fetching genres:\", error);\n      }\n    }\n\n    fetchGenres();\n  }, []);\n\n  let displayedMovies = movies\n    .filter((m) => {\n      return m.title.toLowerCase().search(nameFilter.toLowerCase()) !== -1;\n    })\n    .filter((m) => {\n      return genreId > 0 ? m.genre_ids.includes(genreId) : true;\n    });\n\n  const handleChange = (type, value) => {\n    if (type === \"name\") setNameFilter(value);\n    else setGenreFilter(value);\n  };\n\n  const genres = Array.isArray(allGenres) ? allGenres : [];\n\n  return (\n    <Grid container>\n      <Grid size={12}>\n        <Header title={title} />\n      </Grid>\n      <Grid container sx={{flex: \"1 1 500px\"}}>\n        <Grid \n          key=\"find\" \n          size={{xs: 12, sm: 6, md: 4, lg: 3, xl: 2}} \n          sx={{padding: \"20px\"}}\n        >\n          <FilterCard\n            onUserInput={handleChange}\n            titleFilter={nameFilter}\n            genreFilter={genreFilter}\n          />\n        </Grid>\n        <MovieList selectFavorite={selectFavorite} movies={displayedMovies}></MovieList>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default MovieListPageTemplate;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}