{"ast":null,"code":"var _jsxFileName = \"/Users/jorjaholland/Desktop/web app assignment /react-movie-labs/MoviesCA/movies/src/pages/movieDetailsPage.js\";\nimport React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport MovieDetails from \"../components/movieDetails/\";\nimport PageTemplate from \"../components/templateMoviePage\";\nimport { getMovie } from \"../api/tmdb-api\";\nimport { useQuery } from \"react-query\";\nimport Spinner from \"../components/spinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MoviePage = () => {\n  const {\n    id\n  } = useParams();\n  const {\n    data: movie,\n    error,\n    isLoading,\n    isError\n  } = useQuery([\"movie\", {\n    id\n  }], getMovie);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 12\n    }, this);\n  }\n  if (isError) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 12\n    }, this);\n  }\n  return movie ? /*#__PURE__*/_jsxDEV(PageTemplate, {\n    movie: movie,\n    children: /*#__PURE__*/_jsxDEV(MovieDetails, {\n      movie: movie\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Waiting for movie details\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\nexport default MoviePage;","map":{"version":3,"names":["React","useParams","MovieDetails","PageTemplate","getMovie","useQuery","Spinner","jsxDEV","_jsxDEV","MoviePage","id","data","movie","error","isLoading","isError","fileName","_jsxFileName","lineNumber","columnNumber","children","message"],"sources":["/Users/jorjaholland/Desktop/web app assignment /react-movie-labs/MoviesCA/movies/src/pages/movieDetailsPage.js"],"sourcesContent":["import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport MovieDetails from \"../components/movieDetails/\";\nimport PageTemplate from \"../components/templateMoviePage\";\nimport { getMovie } from \"../api/tmdb-api\";\nimport { useQuery } from \"react-query\";\nimport Spinner from \"../components/spinner\";\n\nconst MoviePage = () => {\n  const { id } = useParams();\n\n  const { data: movie, error, isLoading, isError } = useQuery(\n    [\"movie\", { id }],\n    getMovie\n  );\n\n  if (isLoading) {\n    return <Spinner />;\n  }\n\n  if (isError) {\n    return <h1>{error.message}</h1>;\n  }\n\n  return movie ? (\n    <PageTemplate movie={movie}>\n      <MovieDetails movie={movie} />\n    </PageTemplate>\n  ) : (\n    <p>Waiting for movie details</p>\n  );\n};\n\nexport default MoviePage;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,YAAY,MAAM,6BAA6B;AACtD,OAAOC,YAAY,MAAM,iCAAiC;AAC1D,SAASC,QAAQ,QAAQ,iBAAiB;AAC1C,SAASC,QAAQ,QAAQ,aAAa;AACtC,OAAOC,OAAO,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,SAAS,GAAGA,CAAA,KAAM;EACtB,MAAM;IAAEC;EAAG,CAAC,GAAGT,SAAS,CAAC,CAAC;EAE1B,MAAM;IAAEU,IAAI,EAAEC,KAAK;IAAEC,KAAK;IAAEC,SAAS;IAAEC;EAAQ,CAAC,GAAGV,QAAQ,CACzD,CAAC,OAAO,EAAE;IAAEK;EAAG,CAAC,CAAC,EACjBN,QACF,CAAC;EAED,IAAIU,SAAS,EAAE;IACb,oBAAON,OAAA,CAACF,OAAO;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACpB;EAEA,IAAIJ,OAAO,EAAE;IACX,oBAAOP,OAAA;MAAAY,QAAA,EAAKP,KAAK,CAACQ;IAAO;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACjC;EAEA,OAAOP,KAAK,gBACVJ,OAAA,CAACL,YAAY;IAACS,KAAK,EAAEA,KAAM;IAAAQ,QAAA,eACzBZ,OAAA,CAACN,YAAY;MAACU,KAAK,EAAEA;IAAM;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClB,CAAC,gBAEfX,OAAA;IAAAY,QAAA,EAAG;EAAyB;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAChC;AACH,CAAC;AAED,eAAeV,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}