{"ast":null,"code":"var _jsxFileName = \"/Users/jorjaholland/Desktop/web app assignment /react-movie-labs/MoviesCA-1/movies/src/components/templateActorPage/index.js\";\nimport React from \"react\";\nimport ActorHeader from \"../actorHeader\";\nimport Grid from \"@mui/material/Grid2\";\nimport ImageList from \"@mui/material/ImageList\";\nimport ImageListItem from \"@mui/material/ImageListItem\";\nimport { getActorImages } from \"../../api/tmdb-api\";\nimport { useQuery } from \"react-query\";\nimport Spinner from '../spinner';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TemplateActorPage = ({\n  actor,\n  children\n}) => {\n  const {\n    id\n  } = actor;\n  const {\n    data,\n    error,\n    isLoading,\n    isError\n  } = useQuery(['images', id], () => getActorImages(id), {\n    enabled: !!id\n  });\n  const images = (data === null || data === void 0 ? void 0 : data.profiles) || [];\n  if (!actor || !id) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Actor details not available. Please try again later.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 12\n    }, this);\n  }\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 12\n    }, this);\n  }\n  if (isError) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: (error === null || error === void 0 ? void 0 : error.message) || 'Failed to load images.'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ActorHeader, {\n      actor: actor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 5,\n      style: {\n        padding: \"15px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 3,\n        children: /*#__PURE__*/_jsxDEV(ImageList, {\n          sx: {\n            height: \"100vh\"\n          },\n          cols: 1,\n          children: images.length > 0 ? images.map(image => /*#__PURE__*/_jsxDEV(ImageListItem, {\n            cols: 1,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `https://image.tmdb.org/t/p/w500/${image.file_path}`,\n              alt: image.file_path\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 19\n            }, this)\n          }, image.file_path, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 17\n          }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No images available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 9,\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\nexport default TemplateActorPage;","map":{"version":3,"names":["React","ActorHeader","Grid","ImageList","ImageListItem","getActorImages","useQuery","Spinner","jsxDEV","_jsxDEV","Fragment","_Fragment","TemplateActorPage","actor","children","id","data","error","isLoading","isError","enabled","images","profiles","fileName","_jsxFileName","lineNumber","columnNumber","message","container","spacing","style","padding","item","xs","sx","height","cols","length","map","image","src","file_path","alt"],"sources":["/Users/jorjaholland/Desktop/web app assignment /react-movie-labs/MoviesCA-1/movies/src/components/templateActorPage/index.js"],"sourcesContent":["import React from \"react\";\nimport ActorHeader from \"../actorHeader\";\nimport Grid from \"@mui/material/Grid2\";\nimport ImageList from \"@mui/material/ImageList\";\nimport ImageListItem from \"@mui/material/ImageListItem\";\nimport { getActorImages } from \"../../api/tmdb-api\";\nimport { useQuery } from \"react-query\";\nimport Spinner from '../spinner';\n\nconst TemplateActorPage = ({ actor, children }) => {\n  const { id } = actor;\n\n  const { data, error, isLoading, isError } = useQuery(\n    ['images', id],\n    () => getActorImages(id),\n    {\n      enabled: !!id,\n    }\n  );\n\n  const images = data?.profiles || [];\n\n  if (!actor || !id) {\n    return <h1>Actor details not available. Please try again later.</h1>;\n  }\n\n  if (isLoading) {\n    return <Spinner />;\n  }\n\n  if (isError) {\n    return <h1>{error?.message || 'Failed to load images.'}</h1>;\n  }\n\n  return (\n    <>\n      <ActorHeader actor={actor} />\n\n      <Grid container spacing={5} style={{ padding: \"15px\" }}>\n        <Grid item xs={3}>\n          <ImageList sx={{ height: \"100vh\" }} cols={1}>\n            {images.length > 0 ? (\n              images.map((image) => (\n                <ImageListItem key={image.file_path} cols={1}>\n                  <img\n                    src={`https://image.tmdb.org/t/p/w500/${image.file_path}`}\n                    alt={image.file_path}\n                  />\n                </ImageListItem>\n              ))\n            ) : (\n              <p>No images available</p>\n            )}\n          </ImageList>\n        </Grid>\n\n        <Grid item xs={9}>\n          {children}\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default TemplateActorPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}