{"ast":null,"code":"var _jsxFileName = \"/Users/jorjaholland/Desktop/web app assignment /react-movie-labs/MoviesCA/movies/src/pages/movieDetailsPage.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport MovieDetails from \"../components/movieDetails\";\nimport PageTemplate from \"../components/templateMoviePage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MoviePage = () => {\n  const {\n    id\n  } = useParams(); // Get movie ID from URL\n  const [movie, setMovie] = useState(null);\n  const [images, setImages] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  // Fetch movie details\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      try {\n        const response = await fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=${process.env.REACT_APP_TMDB_KEY}`);\n        if (!response.ok) throw new Error(\"Failed to fetch movie details\");\n        const movieData = await response.json();\n        setMovie(movieData);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchMovieDetails();\n  }, [id]);\n\n  // Fetch movie images\n  useEffect(() => {\n    const fetchMovieImages = async () => {\n      try {\n        const response = await fetch(`https://api.themoviedb.org/3/movie/${id}/images?api_key=${process.env.REACT_APP_TMDB_KEY}`);\n        if (!response.ok) throw new Error(\"Failed to fetch movie images\");\n        const imageData = await response.json();\n        setImages(imageData.posters || []);\n      } catch (err) {\n        setError(err.message);\n      }\n    };\n    fetchMovieImages();\n  }, [id]);\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 21\n  }, this);\n  return movie ? /*#__PURE__*/_jsxDEV(PageTemplate, {\n    movie: movie,\n    children: /*#__PURE__*/_jsxDEV(MovieDetails, {\n      movie: movie,\n      images: images\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Waiting for movie details\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\nexport default MoviePage;","map":{"version":3,"names":["React","useState","useEffect","useParams","MovieDetails","PageTemplate","jsxDEV","_jsxDEV","MoviePage","id","movie","setMovie","images","setImages","error","setError","isLoading","setIsLoading","fetchMovieDetails","response","fetch","process","env","REACT_APP_TMDB_KEY","ok","Error","movieData","json","err","message","fetchMovieImages","imageData","posters","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/jorjaholland/Desktop/web app assignment /react-movie-labs/MoviesCA/movies/src/pages/movieDetailsPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport MovieDetails from \"../components/movieDetails\";\nimport PageTemplate from \"../components/templateMoviePage\";\n\nconst MoviePage = () => {\n  const { id } = useParams(); // Get movie ID from URL\n  const [movie, setMovie] = useState(null);\n  const [images, setImages] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  // Fetch movie details\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      try {\n        const response = await fetch(\n          `https://api.themoviedb.org/3/movie/${id}?api_key=${process.env.REACT_APP_TMDB_KEY}`\n        );\n        if (!response.ok) throw new Error(\"Failed to fetch movie details\");\n        const movieData = await response.json();\n        setMovie(movieData);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchMovieDetails();\n  }, [id]);\n\n  // Fetch movie images\n  useEffect(() => {\n    const fetchMovieImages = async () => {\n      try {\n        const response = await fetch(\n          `https://api.themoviedb.org/3/movie/${id}/images?api_key=${process.env.REACT_APP_TMDB_KEY}`\n        );\n        if (!response.ok) throw new Error(\"Failed to fetch movie images\");\n        const imageData = await response.json();\n        setImages(imageData.posters || []);\n      } catch (err) {\n        setError(err.message);\n      }\n    };\n\n    fetchMovieImages();\n  }, [id]);\n\n  if (isLoading) return <p>Loading...</p>;\n  if (error) return <h1>{error}</h1>;\n\n  return movie ? (\n    <PageTemplate movie={movie}>\n      <MovieDetails movie={movie} images={images} />\n    </PageTemplate>\n  ) : (\n    <p>Waiting for movie details</p>\n  );\n};\n\nexport default MoviePage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}