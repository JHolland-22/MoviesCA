{"ast":null,"code":"var _jsxFileName = \"/Users/jorjaholland/Desktop/web app assignment /react-movie-labs/MoviesCA/MoviesCA-4/movies/src/components/actorList/index.js\";\nimport React from \"react\";\nimport ActorCard from \"../actorCard\";\nimport Grid from \"@mui/material/Grid2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ActorList = props => {\n  const {\n    actors = []\n  } = props; // Default to an empty array if actors is not provided\n\n  if (!actors.length) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No actors found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 12\n    }, this); // Return this if there are no actors to display\n  }\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 2,\n    sx: {\n      padding: \"20px\"\n    },\n    children: actors.map(actor => /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      md: 4,\n      lg: 3,\n      xl: 2,\n      children: /*#__PURE__*/_jsxDEV(ActorCard, {\n        actor: actor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this)\n    }, actor.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\nexport default ActorList;","map":{"version":3,"names":["React","ActorCard","Grid","jsxDEV","_jsxDEV","ActorList","props","actors","length","children","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","sx","padding","map","actor","item","xs","sm","md","lg","xl","id"],"sources":["/Users/jorjaholland/Desktop/web app assignment /react-movie-labs/MoviesCA/MoviesCA-4/movies/src/components/actorList/index.js"],"sourcesContent":["import React from \"react\";\nimport ActorCard from \"../actorCard\";\nimport Grid from \"@mui/material/Grid2\";\n\nconst ActorList = (props) => {\n  const { actors = [] } = props; // Default to an empty array if actors is not provided\n\n  if (!actors.length) {\n    return <p>No actors found.</p>; // Return this if there are no actors to display\n  }\n\n  return (\n    <Grid container spacing={2} sx={{ padding: \"20px\" }}>\n      {actors.map((actor) => (\n        <Grid key={actor.id} item xs={12} sm={6} md={4} lg={3} xl={2}>\n          <ActorCard actor={actor} />\n        </Grid>\n      ))}\n    </Grid>\n  );\n};\n\nexport default ActorList;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,cAAc;AACpC,OAAOC,IAAI,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,SAAS,GAAIC,KAAK,IAAK;EAC3B,MAAM;IAAEC,MAAM,GAAG;EAAG,CAAC,GAAGD,KAAK,CAAC,CAAC;;EAE/B,IAAI,CAACC,MAAM,CAACC,MAAM,EAAE;IAClB,oBAAOJ,OAAA;MAAAK,QAAA,EAAG;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,CAAC,CAAC;EAClC;EAEA,oBACET,OAAA,CAACF,IAAI;IAACY,SAAS;IAACC,OAAO,EAAE,CAAE;IAACC,EAAE,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAR,QAAA,EACjDF,MAAM,CAACW,GAAG,CAAEC,KAAK,iBAChBf,OAAA,CAACF,IAAI;MAAgBkB,IAAI;MAACC,EAAE,EAAE,EAAG;MAACC,EAAE,EAAE,CAAE;MAACC,EAAE,EAAE,CAAE;MAACC,EAAE,EAAE,CAAE;MAACC,EAAE,EAAE,CAAE;MAAAhB,QAAA,eAC3DL,OAAA,CAACH,SAAS;QAACkB,KAAK,EAAEA;MAAM;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC,GADlBM,KAAK,CAACO,EAAE;MAAAhB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEb,CACP;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEX,CAAC;AAED,eAAeR,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}