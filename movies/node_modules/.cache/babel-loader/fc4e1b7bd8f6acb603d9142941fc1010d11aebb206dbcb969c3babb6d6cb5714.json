{"ast":null,"code":"var _jsxFileName = \"/Users/jorjaholland/Desktop/web app assignment /react-movie-labs/MoviesCA/MoviesCA-4/movies/src/components/actorList/index.js\";\nimport React from \"react\";\nimport ActorCard from \"../actorListCard\";\nimport Grid from \"@mui/material/Grid2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ActorList = props => {\n  const {\n    actors = [],\n    action\n  } = props; // Default to an empty array if `actors` is not passed.\n\n  const actorCards = actors.map(actor => /*#__PURE__*/_jsxDEV(Grid, {\n    item: true,\n    xs: 12 // Full width on extra-small screens.\n    ,\n    sm: 6 // Half width on small screens.\n    ,\n    md: 4 // One-third width on medium screens.\n    ,\n    lg: 3 // One-fourth width on large screens.\n    ,\n    xl: 2 // One-sixth width on extra-large screens.\n    ,\n    children: /*#__PURE__*/_jsxDEV(ActorCard, {\n      actor: actor,\n      action: action\n    }, actor.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, actor.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 2,\n    sx: {\n      padding: \"20px\"\n    },\n    children: actorCards.length > 0 ? actorCards : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No actors found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 45\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\nexport default ActorList;","map":{"version":3,"names":["React","ActorCard","Grid","jsxDEV","_jsxDEV","ActorList","props","actors","action","actorCards","map","actor","item","xs","sm","md","lg","xl","children","id","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","sx","padding","length"],"sources":["/Users/jorjaholland/Desktop/web app assignment /react-movie-labs/MoviesCA/MoviesCA-4/movies/src/components/actorList/index.js"],"sourcesContent":["import React from \"react\";\nimport ActorCard from \"../actorListCard\";\nimport Grid from \"@mui/material/Grid2\";\n\nconst ActorList = (props) => {\n  const { actors = [], action } = props; // Default to an empty array if `actors` is not passed.\n\n  const actorCards = actors.map((actor) => (\n    <Grid\n      key={actor.id}\n      item\n      xs={12} // Full width on extra-small screens.\n      sm={6} // Half width on small screens.\n      md={4} // One-third width on medium screens.\n      lg={3} // One-fourth width on large screens.\n      xl={2} // One-sixth width on extra-large screens.\n    >\n      <ActorCard key={actor.id} actor={actor} action={action} />\n    </Grid>\n  ));\n\n  return (\n    <Grid container spacing={2} sx={{ padding: \"20px\" }}>\n      {actorCards.length > 0 ? actorCards : <p>No actors found.</p>}\n    </Grid>\n  );\n};\n\nexport default ActorList;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,kBAAkB;AACxC,OAAOC,IAAI,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,SAAS,GAAIC,KAAK,IAAK;EAC3B,MAAM;IAAEC,MAAM,GAAG,EAAE;IAAEC;EAAO,CAAC,GAAGF,KAAK,CAAC,CAAC;;EAEvC,MAAMG,UAAU,GAAGF,MAAM,CAACG,GAAG,CAAEC,KAAK,iBAClCP,OAAA,CAACF,IAAI;IAEHU,IAAI;IACJC,EAAE,EAAE,EAAG,CAAC;IAAA;IACRC,EAAE,EAAE,CAAE,CAAC;IAAA;IACPC,EAAE,EAAE,CAAE,CAAC;IAAA;IACPC,EAAE,EAAE,CAAE,CAAC;IAAA;IACPC,EAAE,EAAE,CAAE,CAAC;IAAA;IAAAC,QAAA,eAEPd,OAAA,CAACH,SAAS;MAAgBU,KAAK,EAAEA,KAAM;MAACH,MAAM,EAAEA;IAAO,GAAvCG,KAAK,CAACQ,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAiC;EAAC,GARrDZ,KAAK,CAACQ,EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAST,CACP,CAAC;EAEF,oBACEnB,OAAA,CAACF,IAAI;IAACsB,SAAS;IAACC,OAAO,EAAE,CAAE;IAACC,EAAE,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAT,QAAA,EACjDT,UAAU,CAACmB,MAAM,GAAG,CAAC,GAAGnB,UAAU,gBAAGL,OAAA;MAAAc,QAAA,EAAG;IAAgB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzD,CAAC;AAEX,CAAC;AAED,eAAelB,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}