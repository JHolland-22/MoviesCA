{"ast":null,"code":"var _jsxFileName = \"/Users/jorjaholland/Desktop/web app assignment /react-movie-labs/MoviesCA/MoviesCA/movies/src/index.js\";\n// src/index.js\nimport React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport App from \"./App\";\nimport { QueryClientProvider, QueryClient } from \"react-query\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\nimport \"./index.css\"; // Assuming you have global styles\n\n// Create a new instance of QueryClient\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      staleTime: 360000,\n      // Data stays fresh for 1 hour\n      refetchInterval: 360000,\n      // Refetch data every hour\n      refetchOnWindowFocus: false // Disable refetching on window focus\n    }\n  }\n});\n\n// Render the React application\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(/*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(QueryClientProvider, {\n    client: queryClient,\n    children: [/*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(ReactQueryDevtools, {\n      initialIsOpen: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 24,\n  columnNumber: 3\n}, this));","map":{"version":3,"names":["React","ReactDOM","App","QueryClientProvider","QueryClient","ReactQueryDevtools","jsxDEV","_jsxDEV","queryClient","defaultOptions","queries","staleTime","refetchInterval","refetchOnWindowFocus","root","createRoot","document","getElementById","render","StrictMode","children","client","fileName","_jsxFileName","lineNumber","columnNumber","initialIsOpen"],"sources":["/Users/jorjaholland/Desktop/web app assignment /react-movie-labs/MoviesCA/MoviesCA/movies/src/index.js"],"sourcesContent":["// src/index.js\nimport React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport App from \"./App\";\nimport { QueryClientProvider, QueryClient } from \"react-query\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\nimport \"./index.css\"; // Assuming you have global styles\n\n\n// Create a new instance of QueryClient\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      staleTime: 360000, // Data stays fresh for 1 hour\n      refetchInterval: 360000, // Refetch data every hour\n      refetchOnWindowFocus: false, // Disable refetching on window focus\n    },\n  },\n});\n\n// Render the React application\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <App /> {/* App is rendered inside QueryClientProvider */}\n      <ReactQueryDevtools initialIsOpen={false} />\n    </QueryClientProvider>\n  </React.StrictMode>\n);"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,GAAG,MAAM,OAAO;AACvB,SAASC,mBAAmB,EAAEC,WAAW,QAAQ,aAAa;AAC9D,SAASC,kBAAkB,QAAQ,sBAAsB;AACzD,OAAO,aAAa,CAAC,CAAC;;AAGtB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,GAAG,IAAIJ,WAAW,CAAC;EAClCK,cAAc,EAAE;IACdC,OAAO,EAAE;MACPC,SAAS,EAAE,MAAM;MAAE;MACnBC,eAAe,EAAE,MAAM;MAAE;MACzBC,oBAAoB,EAAE,KAAK,CAAE;IAC/B;EACF;AACF,CAAC,CAAC;;AAEF;AACA,MAAMC,IAAI,GAAGb,QAAQ,CAACc,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM,cACTX,OAAA,CAACP,KAAK,CAACmB,UAAU;EAAAC,QAAA,eACfb,OAAA,CAACJ,mBAAmB;IAACkB,MAAM,EAAEb,WAAY;IAAAY,QAAA,gBACvCb,OAAA,CAACL,GAAG;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,KAAC,eACRlB,OAAA,CAACF,kBAAkB;MAACqB,aAAa,EAAE;IAAM;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzB;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACN,CACpB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}