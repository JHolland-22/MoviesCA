{"ast":null,"code":"export const getMovies = () => {\n  return fetch(`https://api.themoviedb.org/3/discover/movie?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US&include_adult=false&include_video=false&page=1`).then(response => {\n    if (!response.ok) {\n      return response.json().then(error => {\n        throw new Error(error.status_message || \"Something went wrong\");\n      });\n    }\n    return response.json();\n  }).catch(error => {\n    throw error;\n  });\n};\nexport const getMovie = args => {\n  const [, idPart] = args.queryKey;\n  const {\n    id\n  } = idPart;\n  return fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=${process.env.REACT_APP_TMDB_KEY}`).then(response => {\n    if (!response.ok) {\n      return response.json().then(error => {\n        throw new Error(error.status_message || \"Something went wrong\");\n      });\n    }\n    return response.json();\n  }).catch(error => {\n    throw error;\n  });\n};\nexport const getGenres = () => {\n  return fetch(`https://api.themoviedb.org/3/genre/movie/list?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US`).then(response => {\n    if (!response.ok) {\n      return response.json().then(error => {\n        throw new Error(error.status_message || \"Something went wrong\");\n      });\n    }\n    return response.json();\n  }).then(data => data.genres).catch(error => {\n    throw error;\n  });\n};\nexport const getMovieImages = ({\n  queryKey\n}) => {\n  const [, idPart] = queryKey;\n  const {\n    id\n  } = idPart;\n  return fetch(`https://api.themoviedb.org/3/movie/${id}/images?api_key=${process.env.REACT_APP_TMDB_KEY}`).then(response => {\n    if (!response.ok) {\n      return response.json().then(error => {\n        throw new Error(error.status_message || \"Something went wrong\");\n      });\n    }\n    return response.json();\n  }).catch(error => {\n    throw error;\n  });\n};\nexport const getMovieReviews = ({\n  queryKey\n}) => {\n  const [, idPart] = queryKey;\n  const {\n    id\n  } = idPart;\n  return fetch(`https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${process.env.REACT_APP_TMDB_KEY}`).then(response => {\n    if (!response.ok) {\n      return response.json().then(error => {\n        throw new Error(error.status_message || \"Something went wrong\");\n      });\n    }\n    return response.json();\n  }).catch(error => {\n    throw error;\n  });\n};\nexport const getLatestMovie = () => {\n  return fetch(`https://api.themoviedb.org/3/movie/latest?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US`).then(response => {\n    if (!response.ok) {\n      return response.json().then(error => {\n        throw new Error(error.status_message || \"Something went wrong\");\n      });\n    }\n    return response.json();\n  }).catch(error => {\n    throw error;\n  });\n};\nexport const getActors = () => {\n  return fetch(`https://api.themoviedb.org/3/person/popular?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US&page=1`).then(response => {\n    if (!response.ok) {\n      return response.json().then(error => {\n        throw new Error(error.status_message || \"Something went wrong\");\n      });\n    }\n    return response.json();\n  }).then(data => data.results).catch(error => {\n    throw error;\n  });\n};\nexport const getActor = ({\n  queryKey\n}) => {\n  const [, idPart] = queryKey;\n  const {\n    id\n  } = idPart;\n  return fetch(`https://api.themoviedb.org/3/person/${id}?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US`).then(response => {\n    if (!response.ok) {\n      throw new Error(response.json().message);\n    }\n    return response.json();\n  }).catch(error => {\n    throw error;\n  });\n};\nexport const getActorImages = id => {\n  return fetch(`https://api.themoviedb.org/3/person/${id}/images?api_key=${process.env.REACT_APP_TMDB_KEY}`).then(response => {\n    if (!response.ok) {\n      return response.json().then(error => {\n        throw new Error(error.status_message || \"Something went wrong\");\n      });\n    }\n    return response.json();\n  }).catch(error => {\n    throw error;\n  });\n};","map":{"version":3,"names":["getMovies","fetch","process","env","REACT_APP_TMDB_KEY","then","response","ok","json","error","Error","status_message","catch","getMovie","args","idPart","queryKey","id","getGenres","data","genres","getMovieImages","getMovieReviews","getLatestMovie","getActors","results","getActor","message","getActorImages"],"sources":["/Users/jorjaholland/Desktop/web app assignment /react-movie-labs/MoviesCA/movies/src/api/tmdb-api.js"],"sourcesContent":["export const getMovies = () => {\n  return fetch(\n    `https://api.themoviedb.org/3/discover/movie?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US&include_adult=false&include_video=false&page=1`\n  )\n    .then((response) => {\n      if (!response.ok) {\n        return response.json().then((error) => {\n          throw new Error(error.status_message || \"Something went wrong\");\n        });\n      }\n      return response.json();\n    })\n    .catch((error) => {\n      throw error;\n    });\n};\n\nexport const getMovie = (args) => {\n  const [, idPart] = args.queryKey;\n  const { id } = idPart;\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${process.env.REACT_APP_TMDB_KEY}`\n  ).then((response) => {\n    if (!response.ok) {\n      return response.json().then((error) => {\n        throw new Error(error.status_message || \"Something went wrong\");\n      });\n    }\n    return response.json();\n  })\n  .catch((error) => {\n    throw error;\n  });\n};\n\nexport const getGenres = () => {\n  return fetch(\n    `https://api.themoviedb.org/3/genre/movie/list?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US`\n  )\n    .then((response) => {\n      if (!response.ok) {\n        return response.json().then((error) => {\n          throw new Error(error.status_message || \"Something went wrong\");\n        });\n      }\n      return response.json();\n    })\n    .then((data) => data.genres)\n    .catch((error) => {\n      throw error;\n    });\n};\n\n\nexport const getMovieImages = ({ queryKey }) => {\n  const [, idPart] = queryKey;\n  const { id } = idPart;\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}/images?api_key=${process.env.REACT_APP_TMDB_KEY}`\n  ).then((response) => {\n    if (!response.ok) {\n      return response.json().then((error) => {\n        throw new Error(error.status_message || \"Something went wrong\");\n      });\n    }\n    return response.json();\n  })\n  .catch((error) => {\n    throw error;\n  });\n};\n\nexport const getMovieReviews = ({ queryKey }) => {\n  const [, idPart] = queryKey;\n  const { id } = idPart;\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${process.env.REACT_APP_TMDB_KEY}`\n  ).then((response) => {\n    if (!response.ok) {\n      return response.json().then((error) => {\n        throw new Error(error.status_message || \"Something went wrong\");\n      });\n    }\n    return response.json();\n  })\n  .catch((error) => {\n    throw error;\n  });\n};\n\nexport const getLatestMovie = () => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/latest?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US`\n  )\n    .then((response) => {\n      if (!response.ok) {\n        return response.json().then((error) => {\n          throw new Error(error.status_message || \"Something went wrong\");\n        });\n      }\n      return response.json();\n    })\n    .catch((error) => {\n      throw error;\n    });\n};\n\nexport const getActors = () => {\n  return fetch(\n    `https://api.themoviedb.org/3/person/popular?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US&page=1`\n  )\n    .then((response) => {\n      if (!response.ok) {\n        return response.json().then((error) => {\n          throw new Error(error.status_message || \"Something went wrong\");\n        });\n      }\n      return response.json();\n    })\n    .then((data) => data.results)\n    .catch((error) => {\n      throw error;\n    });\n};\n\nexport const getActor = ({queryKey}) => {\n  const [, idPart] = queryKey;\n  const {id} = idPart;\n  return fetch(\n      `https://api.themoviedb.org/3/person/${id}?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US`\n  ).then((response) => {\n      if (!response.ok) {\n          throw new Error(response.json().message);\n      }\n      return response.json();\n  })\n      .catch((error) => {\n          throw error\n      });\n};\n\nexport const getActorImages = (id) => {\n  return fetch(\n    `https://api.themoviedb.org/3/person/${id}/images?api_key=${process.env.REACT_APP_TMDB_KEY}`\n  )\n    .then((response) => {\n      if (!response.ok) {\n        return response.json().then((error) => {\n          throw new Error(error.status_message || \"Something went wrong\");\n        });\n      }\n      return response.json();\n    })\n    .catch((error) => {\n      throw error;\n    });\n};\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}