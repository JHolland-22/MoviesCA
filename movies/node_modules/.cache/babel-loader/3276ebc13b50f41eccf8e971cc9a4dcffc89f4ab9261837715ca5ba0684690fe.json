{"ast":null,"code":"var _jsxFileName = \"/Users/jorjaholland/Desktop/web app assignment /react-movie-labs/MoviesCA-1/movies/src/pages/favoriteActorPage.js\";\nimport React, { useContext } from \"react\";\nimport PageTemplate from \"../components/templateActorListPage\";\nimport { ActorsContext } from \"../contexts/actorContext\";\nimport { useQueries } from \"react-query\";\nimport { getActor } from \"../api/tmdb-api\";\nimport Spinner from '../components/spinner';\nimport RemoveFromFavorites from \"../components/cardIcons/removeFromFavorites\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FavoriteActorPage = () => {\n  const {\n    favorites: actorIds\n  } = useContext(ActorsContext);\n  const favoriteActorQueries = useQueries(actorIds.map(actorId => {\n    return {\n      queryKey: [\"actor\", {\n        id: actorId\n      }],\n      queryFn: getActor\n    };\n  }));\n  const isLoading = favoriteActorQueries.find(m => m.isLoading === true);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 16\n    }, this);\n  }\n  const actors = favoriteActorQueries.map(q => {\n    q.data.genre_ids = q.data.genres.map(g => g.id);\n    return q.data;\n  });\n  return /*#__PURE__*/_jsxDEV(PageTemplate, {\n    title: \"Favorite actors\",\n    actors: actors,\n    action: actor => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(RemoveFromFavorites, {\n          actor: actor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this)\n      }, void 0, false);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\nexport default FavoriteActorPage;","map":{"version":3,"names":["React","useContext","PageTemplate","ActorsContext","useQueries","getActor","Spinner","RemoveFromFavorites","jsxDEV","_jsxDEV","Fragment","_Fragment","FavoriteActorPage","favorites","actorIds","favoriteActorQueries","map","actorId","queryKey","id","queryFn","isLoading","find","m","fileName","_jsxFileName","lineNumber","columnNumber","actors","q","data","genre_ids","genres","g","title","action","actor","children"],"sources":["/Users/jorjaholland/Desktop/web app assignment /react-movie-labs/MoviesCA-1/movies/src/pages/favoriteActorPage.js"],"sourcesContent":["import React, {useContext} from \"react\";\nimport PageTemplate from \"../components/templateActorListPage\";\nimport {ActorsContext} from \"../contexts/actorContext\";\nimport {useQueries} from \"react-query\";\nimport {getActor} from \"../api/tmdb-api\";\nimport Spinner from '../components/spinner'\nimport RemoveFromFavorites from \"../components/cardIcons/removeFromFavorites\";\n\n\nconst FavoriteActorPage = () => {\n    const {favorites: actorIds } = useContext(ActorsContext);\n\n    const favoriteActorQueries = useQueries(\n        actorIds.map((actorId) => {\n            return {\n                queryKey: [\"actor\", { id: actorId }],\n                queryFn: getActor,\n            };\n        })\n    );\n    const isLoading = favoriteActorQueries.find((m) => m.isLoading === true);\n\n    if (isLoading) {\n        return <Spinner />;\n    }\n\n    const actors = favoriteActorQueries.map((q) => {\n        q.data.genre_ids = q.data.genres.map(g => g.id)\n        return q.data\n    });\n\n\n    return (\n        <PageTemplate\n            title=\"Favorite actors\"\n            actors={actors}\n            action={(actor) => {\n                return (\n                    <>\n                        <RemoveFromFavorites actor={actor} />\n                    </>\n                );\n            }}\n        />\n    );\n};\n\nexport default FavoriteActorPage;"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,UAAU,QAAO,OAAO;AACvC,OAAOC,YAAY,MAAM,qCAAqC;AAC9D,SAAQC,aAAa,QAAO,0BAA0B;AACtD,SAAQC,UAAU,QAAO,aAAa;AACtC,SAAQC,QAAQ,QAAO,iBAAiB;AACxC,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,mBAAmB,MAAM,6CAA6C;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAG9E,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAC5B,MAAM;IAACC,SAAS,EAAEC;EAAS,CAAC,GAAGb,UAAU,CAACE,aAAa,CAAC;EAExD,MAAMY,oBAAoB,GAAGX,UAAU,CACnCU,QAAQ,CAACE,GAAG,CAAEC,OAAO,IAAK;IACtB,OAAO;MACHC,QAAQ,EAAE,CAAC,OAAO,EAAE;QAAEC,EAAE,EAAEF;MAAQ,CAAC,CAAC;MACpCG,OAAO,EAAEf;IACb,CAAC;EACL,CAAC,CACL,CAAC;EACD,MAAMgB,SAAS,GAAGN,oBAAoB,CAACO,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACF,SAAS,KAAK,IAAI,CAAC;EAExE,IAAIA,SAAS,EAAE;IACX,oBAAOZ,OAAA,CAACH,OAAO;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACtB;EAEA,MAAMC,MAAM,GAAGb,oBAAoB,CAACC,GAAG,CAAEa,CAAC,IAAK;IAC3CA,CAAC,CAACC,IAAI,CAACC,SAAS,GAAGF,CAAC,CAACC,IAAI,CAACE,MAAM,CAAChB,GAAG,CAACiB,CAAC,IAAIA,CAAC,CAACd,EAAE,CAAC;IAC/C,OAAOU,CAAC,CAACC,IAAI;EACjB,CAAC,CAAC;EAGF,oBACIrB,OAAA,CAACP,YAAY;IACTgC,KAAK,EAAC,iBAAiB;IACvBN,MAAM,EAAEA,MAAO;IACfO,MAAM,EAAGC,KAAK,IAAK;MACf,oBACI3B,OAAA,CAAAE,SAAA;QAAA0B,QAAA,eACI5B,OAAA,CAACF,mBAAmB;UAAC6B,KAAK,EAAEA;QAAM;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC,gBACvC,CAAC;IAEX;EAAE;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAED,eAAef,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}