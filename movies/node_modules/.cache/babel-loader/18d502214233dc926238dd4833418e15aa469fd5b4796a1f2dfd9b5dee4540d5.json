{"ast":null,"code":"var _jsxFileName = \"/Users/jorjaholland/Desktop/web app assignment /react-movie-labs/MoviesCA-1/movies/src/pages/favoriteActorPage.js\";\nimport React, { useContext } from \"react\";\nimport PageTemplate from \"../components/templateActorListPage\";\nimport { ActorsContext } from \"../contexts/actorContext\";\nimport { useQueries } from \"react-query\";\nimport { getActor } from \"../api/tmdb-api\";\nimport Spinner from \"../components/spinner\";\nimport RemoveFromFavorites from \"../components/cardIcons/removeFromFavorites\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FavoriteActorPage = () => {\n  const {\n    favorites: actorIds\n  } = useContext(ActorsContext);\n  const favoriteActorQueries = useQueries(actorIds.map(actorId => ({\n    queryKey: [\"actor\", {\n      id: actorId\n    }],\n    queryFn: getActor\n  })));\n  const isLoading = favoriteActorQueries.some(m => m.isLoading === true);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 12\n    }, this);\n  }\n  const actors = favoriteActorQueries.filter(query => query.data).map(q => {\n    if (q.data.genres) {\n      q.data.genre_ids = q.data.genres.map(g => g.id);\n    }\n    return q.data;\n  });\n  return /*#__PURE__*/_jsxDEV(PageTemplate, {\n    title: \"Favorite Actors\",\n    actors: actors,\n    action: actor => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(RemoveFromFavorites, {\n          actor: actor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)\n      }, void 0, false);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\nexport default FavoriteActorPage;","map":{"version":3,"names":["React","useContext","PageTemplate","ActorsContext","useQueries","getActor","Spinner","RemoveFromFavorites","jsxDEV","_jsxDEV","Fragment","_Fragment","FavoriteActorPage","favorites","actorIds","favoriteActorQueries","map","actorId","queryKey","id","queryFn","isLoading","some","m","fileName","_jsxFileName","lineNumber","columnNumber","actors","filter","query","data","q","genres","genre_ids","g","title","action","actor","children"],"sources":["/Users/jorjaholland/Desktop/web app assignment /react-movie-labs/MoviesCA-1/movies/src/pages/favoriteActorPage.js"],"sourcesContent":["import React, { useContext } from \"react\";\nimport PageTemplate from \"../components/templateActorListPage\";\nimport { ActorsContext } from \"../contexts/actorContext\";\nimport { useQueries } from \"react-query\";\nimport { getActor } from \"../api/tmdb-api\";\nimport Spinner from \"../components/spinner\";\nimport RemoveFromFavorites from \"../components/cardIcons/removeFromFavorites\";\n\nconst FavoriteActorPage = () => {\n  const { favorites: actorIds } = useContext(ActorsContext);\n\n  const favoriteActorQueries = useQueries(\n    actorIds.map((actorId) => ({\n      queryKey: [\"actor\", { id: actorId }],\n      queryFn: getActor,\n    }))\n  );\n\n  const isLoading = favoriteActorQueries.some((m) => m.isLoading === true);\n\n  if (isLoading) {\n    return <Spinner />;\n  }\n\n  const actors = favoriteActorQueries\n    .filter((query) => query.data)\n    .map((q) => {\n      if (q.data.genres) {\n        q.data.genre_ids = q.data.genres.map((g) => g.id);\n      }\n      return q.data;\n    });\n\n  return (\n    <PageTemplate\n      title=\"Favorite Actors\"\n      actors={actors}\n      action={(actor) => {\n        return (\n          <>\n            <RemoveFromFavorites actor={actor} />\n          </>\n        );\n      }}\n    />\n  );\n};\n\nexport default FavoriteActorPage;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,OAAOC,YAAY,MAAM,qCAAqC;AAC9D,SAASC,aAAa,QAAQ,0BAA0B;AACxD,SAASC,UAAU,QAAQ,aAAa;AACxC,SAASC,QAAQ,QAAQ,iBAAiB;AAC1C,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,mBAAmB,MAAM,6CAA6C;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE9E,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAC9B,MAAM;IAAEC,SAAS,EAAEC;EAAS,CAAC,GAAGb,UAAU,CAACE,aAAa,CAAC;EAEzD,MAAMY,oBAAoB,GAAGX,UAAU,CACrCU,QAAQ,CAACE,GAAG,CAAEC,OAAO,KAAM;IACzBC,QAAQ,EAAE,CAAC,OAAO,EAAE;MAAEC,EAAE,EAAEF;IAAQ,CAAC,CAAC;IACpCG,OAAO,EAAEf;EACX,CAAC,CAAC,CACJ,CAAC;EAED,MAAMgB,SAAS,GAAGN,oBAAoB,CAACO,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACF,SAAS,KAAK,IAAI,CAAC;EAExE,IAAIA,SAAS,EAAE;IACb,oBAAOZ,OAAA,CAACH,OAAO;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACpB;EAEA,MAAMC,MAAM,GAAGb,oBAAoB,CAChCc,MAAM,CAAEC,KAAK,IAAKA,KAAK,CAACC,IAAI,CAAC,CAC7Bf,GAAG,CAAEgB,CAAC,IAAK;IACV,IAAIA,CAAC,CAACD,IAAI,CAACE,MAAM,EAAE;MACjBD,CAAC,CAACD,IAAI,CAACG,SAAS,GAAGF,CAAC,CAACD,IAAI,CAACE,MAAM,CAACjB,GAAG,CAAEmB,CAAC,IAAKA,CAAC,CAAChB,EAAE,CAAC;IACnD;IACA,OAAOa,CAAC,CAACD,IAAI;EACf,CAAC,CAAC;EAEJ,oBACEtB,OAAA,CAACP,YAAY;IACXkC,KAAK,EAAC,iBAAiB;IACvBR,MAAM,EAAEA,MAAO;IACfS,MAAM,EAAGC,KAAK,IAAK;MACjB,oBACE7B,OAAA,CAAAE,SAAA;QAAA4B,QAAA,eACE9B,OAAA,CAACF,mBAAmB;UAAC+B,KAAK,EAAEA;QAAM;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC,gBACrC,CAAC;IAEP;EAAE;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEN,CAAC;AAED,eAAef,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}