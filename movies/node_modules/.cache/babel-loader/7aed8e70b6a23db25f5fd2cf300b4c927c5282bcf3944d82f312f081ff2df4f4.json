{"ast":null,"code":"var _jsxFileName = \"/Users/jorjaholland/Desktop/web app assignment /react-movie-labs/MoviesCA/movies/src/components/actorList/index.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { getActors } from \"../../api/tmdb-api\";\nimport ActorCard from \"../ActorCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ActorList = () => {\n  const [actors, setActors] = useState([]);\n  useEffect(() => {\n    getActors().then(data => {\n      setActors(data);\n    }).catch(error => {\n      console.error(\"Error fetching actors:\", error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Popular Actors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"actor-grid\",\n      children: actors.length > 0 ? actors.map(actor => /*#__PURE__*/_jsxDEV(ActorCard, {\n        actor: actor\n      }, actor.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No actors found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\nexport default ActorList;","map":{"version":3,"names":["React","useEffect","useState","getActors","ActorCard","jsxDEV","_jsxDEV","ActorList","actors","setActors","then","data","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","length","map","actor","id"],"sources":["/Users/jorjaholland/Desktop/web app assignment /react-movie-labs/MoviesCA/movies/src/components/actorList/index.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { getActors } from \"../../api/tmdb-api\";\nimport ActorCard from \"../ActorCard\";\n\nconst ActorList = () => {\n  const [actors, setActors] = useState([]);\n\n  useEffect(() => {\n    getActors()\n      .then((data) => {\n        setActors(data);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching actors:\", error);\n      });\n  }, []);\n\n  return (\n    <div>\n      <h2>Popular Actors</h2>\n      <div className=\"actor-grid\">\n        {actors.length > 0 ? (\n          actors.map((actor) => (\n            <ActorCard key={actor.id} actor={actor} />\n          ))\n        ) : (\n          <p>No actors found.</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ActorList;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,oBAAoB;AAC9C,OAAOC,SAAS,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EACtB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAExCD,SAAS,CAAC,MAAM;IACdE,SAAS,CAAC,CAAC,CACRO,IAAI,CAAEC,IAAI,IAAK;MACdF,SAAS,CAACE,IAAI,CAAC;IACjB,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEP,OAAA;IAAAS,QAAA,gBACET,OAAA;MAAAS,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBb,OAAA;MAAKc,SAAS,EAAC,YAAY;MAAAL,QAAA,EACxBP,MAAM,CAACa,MAAM,GAAG,CAAC,GAChBb,MAAM,CAACc,GAAG,CAAEC,KAAK,iBACfjB,OAAA,CAACF,SAAS;QAAgBmB,KAAK,EAAEA;MAAM,GAAvBA,KAAK,CAACC,EAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAiB,CAC1C,CAAC,gBAEFb,OAAA;QAAAS,QAAA,EAAG;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IACvB;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAED,eAAeZ,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}