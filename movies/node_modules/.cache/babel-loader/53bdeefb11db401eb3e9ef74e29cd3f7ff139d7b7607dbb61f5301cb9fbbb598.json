{"ast":null,"code":"var _jsxFileName = \"/Users/jorjaholland/Desktop/web app assignment /react-movie-labs/MoviesCA/MoviesCA-1/movies/src/components/actorList/index.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { getActors } from \"../../api/tmdb-api\";\nimport ActorCard from \"../actorCard\";\nimport Grid from \"@mui/material/Grid2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ActorList = () => {\n  const [actors, setActors] = useState([]); // State to store the list of actors.\n\n  useEffect(() => {\n    // Fetch the list of actors when the component mounts.\n    getActors().then(data => {\n      setActors(data); // Update the state with fetched actor data.\n    }).catch(error => {\n      console.error(\"Error fetching actors:\", error); // Log any errors during fetch.\n    });\n  }, []); // Empty dependency array ensures this effect runs only once on mount.\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2 // Adds space between grid items.\n      ,\n      sx: {\n        padding: \"20px\"\n      } // Adds padding around the grid container.\n      ,\n      children: actors.length > 0 ?\n      // If actors exist, map through the list and display each actor in a grid item.\n      actors.map(actor => /*#__PURE__*/_jsxDEV(Grid, {\n        // Unique key for each actor.\n        item: true,\n        xs: 12 // Full width on extra-small screens.\n        ,\n        sm: 6 // Half width on small screens.\n        ,\n        md: 4 // One-third width on medium screens.\n        ,\n        lg: 3 // One-fourth width on large screens.\n        ,\n        xl: 2 // One-sixth width on extra-large screens.\n        ,\n        children: [/*#__PURE__*/_jsxDEV(ActorCard, {\n          actor: actor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }, this), \" \"]\n      }, actor.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this)) :\n      /*#__PURE__*/\n      // If no actors are available, display a message.\n      _jsxDEV(\"p\", {\n        children: \"No actors found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\nexport default ActorList;","map":{"version":3,"names":["React","useEffect","useState","getActors","ActorCard","Grid","jsxDEV","_jsxDEV","ActorList","actors","setActors","then","data","catch","error","console","children","container","spacing","sx","padding","length","map","actor","item","xs","sm","md","lg","xl","fileName","_jsxFileName","lineNumber","columnNumber","id"],"sources":["/Users/jorjaholland/Desktop/web app assignment /react-movie-labs/MoviesCA/MoviesCA-1/movies/src/components/actorList/index.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { getActors } from \"../../api/tmdb-api\";\nimport ActorCard from \"../actorCard\";\nimport Grid from \"@mui/material/Grid2\";\n\nconst ActorList = () => {\n  const [actors, setActors] = useState([]); // State to store the list of actors.\n\n  useEffect(() => {\n    // Fetch the list of actors when the component mounts.\n    getActors()\n      .then((data) => {\n        setActors(data); // Update the state with fetched actor data.\n      })\n      .catch((error) => {\n        console.error(\"Error fetching actors:\", error); // Log any errors during fetch.\n      });\n  }, []); // Empty dependency array ensures this effect runs only once on mount.\n\n  return (\n    <div>\n      <Grid\n        container\n        spacing={2} // Adds space between grid items.\n        sx={{ padding: \"20px\" }} // Adds padding around the grid container.\n      >\n        {actors.length > 0 ? (\n          // If actors exist, map through the list and display each actor in a grid item.\n          actors.map((actor) => (\n            <Grid\n              key={actor.id} // Unique key for each actor.\n              item\n              xs={12} // Full width on extra-small screens.\n              sm={6} // Half width on small screens.\n              md={4} // One-third width on medium screens.\n              lg={3} // One-fourth width on large screens.\n              xl={2} // One-sixth width on extra-large screens.\n            >\n              <ActorCard actor={actor} /> {/* Display individual actor details in a card. */}\n            </Grid>\n          ))\n        ) : (\n          // If no actors are available, display a message.\n          <p>No actors found.</p>\n        )}\n      </Grid>\n    </div>\n  );\n};\n\nexport default ActorList;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,oBAAoB;AAC9C,OAAOC,SAAS,MAAM,cAAc;AACpC,OAAOC,IAAI,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EACtB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE1CD,SAAS,CAAC,MAAM;IACd;IACAE,SAAS,CAAC,CAAC,CACRQ,IAAI,CAAEC,IAAI,IAAK;MACdF,SAAS,CAACE,IAAI,CAAC,CAAC,CAAC;IACnB,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC,CAAC,CAAC;IAClD,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEP,OAAA;IAAAS,QAAA,eACET,OAAA,CAACF,IAAI;MACHY,SAAS;MACTC,OAAO,EAAE,CAAE,CAAC;MAAA;MACZC,EAAE,EAAE;QAAEC,OAAO,EAAE;MAAO,CAAE,CAAC;MAAA;MAAAJ,QAAA,EAExBP,MAAM,CAACY,MAAM,GAAG,CAAC;MAChB;MACAZ,MAAM,CAACa,GAAG,CAAEC,KAAK,iBACfhB,OAAA,CAACF,IAAI;QACY;QACfmB,IAAI;QACJC,EAAE,EAAE,EAAG,CAAC;QAAA;QACRC,EAAE,EAAE,CAAE,CAAC;QAAA;QACPC,EAAE,EAAE,CAAE,CAAC;QAAA;QACPC,EAAE,EAAE,CAAE,CAAC;QAAA;QACPC,EAAE,EAAE,CAAE,CAAC;QAAA;QAAAb,QAAA,gBAEPT,OAAA,CAACH,SAAS;UAACmB,KAAK,EAAEA;QAAM;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,KAAC;MAAA,GARvBV,KAAK,CAACW,EAAE;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAST,CACP,CAAC;MAAA;MAEF;MACA1B,OAAA;QAAAS,QAAA,EAAG;MAAgB;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IACvB;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAED,eAAezB,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}