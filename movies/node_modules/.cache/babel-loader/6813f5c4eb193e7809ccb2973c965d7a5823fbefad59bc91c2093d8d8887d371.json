{"ast":null,"code":"var _jsxFileName = \"/Users/jorjaholland/Desktop/web app assignment /react-movie-labs/MoviesCA/MoviesCA-4/movies/src/pages/actorListPage.js\";\nimport { useQuery } from \"react-query\";\nimport { getActors } from \"../api/tmdb-api\"; // Function to fetch actors from API\nimport ActorListPageTemplate from \"../components/templateActorListPage\"; // Template for displaying the actor list\nimport Spinner from \"../components/spinner\"; // Spinner while loading data\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ActorPage = () => {\n  // Fetching actors from the API using react-query's useQuery hook\n  const {\n    data,\n    error,\n    isLoading,\n    isError\n  } = useQuery([\"actors\"],\n  // Query key for fetching actors\n  () => getActors() // API function for fetching actors\n  );\n\n  // Handle errors if fetching fails\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 12\n    }, this);\n  }\n  if (isError) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 12\n    }, this);\n  }\n  const actors = (data === null || data === void 0 ? void 0 : data.results) || []; // Actors list from API response\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ActorListPageTemplate, {\n      title: \"Popular Actors\",\n      actors: actors // Pass actors data to ActorListPageTemplate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\nexport default ActorPage;","map":{"version":3,"names":["useQuery","getActors","ActorListPageTemplate","Spinner","jsxDEV","_jsxDEV","Fragment","_Fragment","ActorPage","data","error","isLoading","isError","fileName","_jsxFileName","lineNumber","columnNumber","children","message","actors","results","title"],"sources":["/Users/jorjaholland/Desktop/web app assignment /react-movie-labs/MoviesCA/MoviesCA-4/movies/src/pages/actorListPage.js"],"sourcesContent":["import { useQuery } from \"react-query\";\nimport { getActors } from \"../api/tmdb-api\"; // Function to fetch actors from API\nimport ActorListPageTemplate from \"../components/templateActorListPage\"; // Template for displaying the actor list\nimport Spinner from \"../components/spinner\"; // Spinner while loading data\n\nconst ActorPage = () => {\n  // Fetching actors from the API using react-query's useQuery hook\n  const { data, error, isLoading, isError } = useQuery(\n    [\"actors\"], // Query key for fetching actors\n    () => getActors(), // API function for fetching actors\n  );\n\n  // Handle errors if fetching fails\n  if (isLoading) {\n    return <Spinner />;\n  }\n\n  if (isError) {\n    return <h1>{error.message}</h1>;\n  }\n\n  const actors = data?.results || []; // Actors list from API response\n\n  return (\n    <>\n      {/* Render Actor List Template */}\n      <ActorListPageTemplate\n        title=\"Popular Actors\"\n        actors={actors} // Pass actors data to ActorListPageTemplate\n      />\n    </>\n  );\n};\n\nexport default ActorPage;\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,aAAa;AACtC,SAASC,SAAS,QAAQ,iBAAiB,CAAC,CAAC;AAC7C,OAAOC,qBAAqB,MAAM,qCAAqC,CAAC,CAAC;AACzE,OAAOC,OAAO,MAAM,uBAAuB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE7C,MAAMC,SAAS,GAAGA,CAAA,KAAM;EACtB;EACA,MAAM;IAAEC,IAAI;IAAEC,KAAK;IAAEC,SAAS;IAAEC;EAAQ,CAAC,GAAGZ,QAAQ,CAClD,CAAC,QAAQ,CAAC;EAAE;EACZ,MAAMC,SAAS,CAAC,CAAC,CAAE;EACrB,CAAC;;EAED;EACA,IAAIU,SAAS,EAAE;IACb,oBAAON,OAAA,CAACF,OAAO;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACpB;EAEA,IAAIJ,OAAO,EAAE;IACX,oBAAOP,OAAA;MAAAY,QAAA,EAAKP,KAAK,CAACQ;IAAO;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACjC;EAEA,MAAMG,MAAM,GAAG,CAAAV,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEW,OAAO,KAAI,EAAE,CAAC,CAAC;;EAEpC,oBACEf,OAAA,CAAAE,SAAA;IAAAU,QAAA,eAEEZ,OAAA,CAACH,qBAAqB;MACpBmB,KAAK,EAAC,gBAAgB;MACtBF,MAAM,EAAEA,MAAO,CAAC;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB;EAAC,gBACF,CAAC;AAEP,CAAC;AAED,eAAeR,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}