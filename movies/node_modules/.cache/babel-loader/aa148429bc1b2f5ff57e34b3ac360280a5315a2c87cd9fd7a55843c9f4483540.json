{"ast":null,"code":"var _jsxFileName = \"/Users/jorjaholland/Desktop/web app assignment /react-movie-labs/MoviesCA/MoviesCA-4/movies/src/pages/watchlistPage.js\";\nimport React, { useContext } from \"react\";\nimport PageTemplate from \"../components/templateMovieListPage\";\nimport { MoviesContext } from \"../contexts/movieContext\";\nimport { useQueries } from \"react-query\";\nimport { getMovie } from \"../api/tmdb-api\";\nimport Spinner from '../components/spinner';\nimport WriteReview from \"../components/cardIcons/writeReview\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst WatchlistPage = () => {\n  // Access the list of movie IDs in the watchlist from context\n  const {\n    watchlists: movieIds\n  } = useContext(MoviesContext);\n\n  // Use React Query to fetch data for each movie in the watchlist\n  const watchlistMovieQueries = useQueries(movieIds.map(movieId => ({\n    queryKey: [\"movie\", {\n      id: movieId\n    }],\n    // Query key with the movie ID\n    queryFn: getMovie // Fetch movie data using the getMovie function\n  })));\n\n  // Check if any of the queries are still loading\n  const isLoading = watchlistMovieQueries.find(m => m.isLoading === true);\n\n  // Show a spinner if data is still being loaded\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Map through the query responses and attach genre IDs to each movie object\n  const movies = watchlistMovieQueries.map(q => {\n    q.data.genre_ids = q.data.genres.map(g => g.id); // Map genre names to genre IDs\n    return q.data; // Return the updated movie data\n  });\n  return /*#__PURE__*/_jsxDEV(PageTemplate, {\n    title: \"WatchList\" // Page title\n    ,\n    movies: movies // List of movies to display\n    ,\n    action: movie => {\n      // Action to display buttons for each movie in the watchlist\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"removeFromWatchlist\", {\n          movie: movie\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(WriteReview, {\n          movie: movie\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\nexport default WatchlistPage;","map":{"version":3,"names":["React","useContext","PageTemplate","MoviesContext","useQueries","getMovie","Spinner","WriteReview","jsxDEV","_jsxDEV","Fragment","_Fragment","WatchlistPage","watchlists","movieIds","watchlistMovieQueries","map","movieId","queryKey","id","queryFn","isLoading","find","m","fileName","_jsxFileName","lineNumber","columnNumber","movies","q","data","genre_ids","genres","g","title","action","movie","children"],"sources":["/Users/jorjaholland/Desktop/web app assignment /react-movie-labs/MoviesCA/MoviesCA-4/movies/src/pages/watchlistPage.js"],"sourcesContent":["import React, { useContext } from \"react\";\nimport PageTemplate from \"../components/templateMovieListPage\";\nimport { MoviesContext } from \"../contexts/movieContext\";\nimport { useQueries } from \"react-query\";\nimport { getMovie } from \"../api/tmdb-api\";\nimport Spinner from '../components/spinner';\nimport WriteReview from \"../components/cardIcons/writeReview\";\n\nconst WatchlistPage = () => {\n  // Access the list of movie IDs in the watchlist from context\n  const { watchlists: movieIds } = useContext(MoviesContext);\n\n  // Use React Query to fetch data for each movie in the watchlist\n  const watchlistMovieQueries = useQueries(\n    movieIds.map((movieId) => ({\n      queryKey: [\"movie\", { id: movieId }], // Query key with the movie ID\n      queryFn: getMovie, // Fetch movie data using the getMovie function\n    }))\n  );\n\n  // Check if any of the queries are still loading\n  const isLoading = watchlistMovieQueries.find((m) => m.isLoading === true);\n\n  // Show a spinner if data is still being loaded\n  if (isLoading) {\n    return <Spinner />;\n  }\n\n  // Map through the query responses and attach genre IDs to each movie object\n  const movies = watchlistMovieQueries.map((q) => {\n    q.data.genre_ids = q.data.genres.map((g) => g.id); // Map genre names to genre IDs\n    return q.data; // Return the updated movie data\n  });\n\n  return (\n    <PageTemplate\n      title=\"WatchList\" // Page title\n      movies={movies} // List of movies to display\n      action={(movie) => {\n        // Action to display buttons for each movie in the watchlist\n        return (\n          <>\n            {/* Remove button for removing the movie from the watchlist */}\n            <removeFromWatchlist movie={movie} />\n            {/* Button for writing a review for the movie */}\n            <WriteReview movie={movie} />\n          </>\n        );\n      }}\n    />\n  );\n};\n\nexport default WatchlistPage;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,OAAOC,YAAY,MAAM,qCAAqC;AAC9D,SAASC,aAAa,QAAQ,0BAA0B;AACxD,SAASC,UAAU,QAAQ,aAAa;AACxC,SAASC,QAAQ,QAAQ,iBAAiB;AAC1C,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,WAAW,MAAM,qCAAqC;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE9D,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAC1B;EACA,MAAM;IAAEC,UAAU,EAAEC;EAAS,CAAC,GAAGb,UAAU,CAACE,aAAa,CAAC;;EAE1D;EACA,MAAMY,qBAAqB,GAAGX,UAAU,CACtCU,QAAQ,CAACE,GAAG,CAAEC,OAAO,KAAM;IACzBC,QAAQ,EAAE,CAAC,OAAO,EAAE;MAAEC,EAAE,EAAEF;IAAQ,CAAC,CAAC;IAAE;IACtCG,OAAO,EAAEf,QAAQ,CAAE;EACrB,CAAC,CAAC,CACJ,CAAC;;EAED;EACA,MAAMgB,SAAS,GAAGN,qBAAqB,CAACO,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACF,SAAS,KAAK,IAAI,CAAC;;EAEzE;EACA,IAAIA,SAAS,EAAE;IACb,oBAAOZ,OAAA,CAACH,OAAO;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACpB;;EAEA;EACA,MAAMC,MAAM,GAAGb,qBAAqB,CAACC,GAAG,CAAEa,CAAC,IAAK;IAC9CA,CAAC,CAACC,IAAI,CAACC,SAAS,GAAGF,CAAC,CAACC,IAAI,CAACE,MAAM,CAAChB,GAAG,CAAEiB,CAAC,IAAKA,CAAC,CAACd,EAAE,CAAC,CAAC,CAAC;IACnD,OAAOU,CAAC,CAACC,IAAI,CAAC,CAAC;EACjB,CAAC,CAAC;EAEF,oBACErB,OAAA,CAACP,YAAY;IACXgC,KAAK,EAAC,WAAW,CAAC;IAAA;IAClBN,MAAM,EAAEA,MAAO,CAAC;IAAA;IAChBO,MAAM,EAAGC,KAAK,IAAK;MACjB;MACA,oBACE3B,OAAA,CAAAE,SAAA;QAAA0B,QAAA,gBAEE5B,OAAA;UAAqB2B,KAAK,EAAEA;QAAM;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAErClB,OAAA,CAACF,WAAW;UAAC6B,KAAK,EAAEA;QAAM;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA,eAC7B,CAAC;IAEP;EAAE;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEN,CAAC;AAED,eAAef,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}